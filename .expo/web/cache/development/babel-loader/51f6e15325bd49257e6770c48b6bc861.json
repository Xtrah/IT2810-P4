{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React from 'react';\nimport SearchScreen from \"../screens/SearchScreen\";\nimport CreatePokemonScreen from \"../screens/CreatePokemonScreen\";\nimport { Icon, IconButton, Image } from 'native-base';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport PokemonCardScreen from \"../screens/PokemonCardScreen\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\n\nvar pokemonball = require(\"../assets/images/pokemonball.png\");\n\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return null;\n        },\n        headerTitle: function headerTitle() {\n          return React.createElement(Pressable, {\n            accessibilityLabel: \"Navigate to home page\",\n            onPress: function onPress() {\n              return navigation.navigate('Root');\n            }\n          }, React.createElement(Image, {\n            ml: 2,\n            borderRadius: \"xl\",\n            boxSize: \"30px\",\n            resizeMode: \"cover\",\n            src: pokemonball,\n            alt: \"pokeball home button\"\n          }));\n        },\n        headerRight: function headerRight() {\n          return React.createElement(IconButton, {\n            \"aria-label\": \"Search for pokemon\",\n            onPress: function onPress() {\n              return navigation.navigate('CreatePokemonScreen');\n            },\n            icon: React.createElement(Icon, {\n              as: MaterialIcons,\n              name: \"add-box\"\n            }),\n            _icon: {\n              color: 'red.500',\n              size: 'xl'\n            },\n            _hover: {\n              bg: 'red.500:alpha.20'\n            }\n          });\n        }\n      };\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: SearchScreen,\n    options: {\n      title: 'Pokedex'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreatePokemonScreen\",\n    component: CreatePokemonScreen,\n    options: {\n      title: 'Create Pokemon'\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PokemonCardScreen\",\n    component: PokemonCardScreen,\n    options: {\n      title: 'Pokemon card'\n    }\n  }));\n}\n\nexport default function Navigation() {\n  return React.createElement(NavigationContainer, null, React.createElement(RootNavigator, null));\n}","map":{"version":3,"sources":["/Users/henrikvl/Documents/NTNU/WebDev/project4/navigation/index.tsx"],"names":["NavigationContainer","createNativeStackNavigator","React","SearchScreen","CreatePokemonScreen","Icon","IconButton","Image","MaterialIcons","PokemonCardScreen","pokemonball","require","Stack","RootNavigator","navigation","headerLeft","headerTitle","navigate","headerRight","color","size","bg","title","Navigation"],"mappings":"AAKA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP;AAEA,OAAOC,mBAAP;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,QAAwC,aAAxC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,iBAAP;;;AAGA,IAAMC,WAAW,GAAGC,OAAO,oCAA3B;;AAMA,IAAMC,KAAK,GAAGX,0BAA0B,EAAxC;;AAEA,SAASY,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP;AAEE,IAAA,aAAa,EAAE;AAAA,UAAGC,UAAH,QAAGA,UAAH;AAAA,aAAqB;AAClCC,QAAAA,UAAU,EAAE;AAAA,iBAAM,IAAN;AAAA,SADsB;AAElCC,QAAAA,WAAW,EAAE,uBAAM;AACjB,iBACE,oBAAC,SAAD;AACE,YAAA,kBAAkB,EAAC,uBADrB;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMF,UAAU,CAACG,QAAX,CAAoB,MAApB,CAAN;AAAA;AAFX,aAIE,oBAAC,KAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,YAAY,EAAC,IAFf;AAGE,YAAA,OAAO,EAAC,MAHV;AAIE,YAAA,UAAU,EAAC,OAJb;AAKE,YAAA,GAAG,EAAEP,WALP;AAME,YAAA,GAAG,EAAC;AANN,YAJF,CADF;AAeD,SAlBiC;AAmBlCQ,QAAAA,WAAW,EAAE,uBAAM;AACjB,iBACE,oBAAC,UAAD;AACE,0BAAW,oBADb;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMJ,UAAU,CAACG,QAAX,CAAoB,qBAApB,CAAN;AAAA,aAFX;AAGE,YAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,cAAA,EAAE,EAAET,aAAV;AAAyB,cAAA,IAAI,EAAC;AAA9B,cAHR;AAIE,YAAA,KAAK,EAAE;AACLW,cAAAA,KAAK,EAAE,SADF;AAELC,cAAAA,IAAI,EAAE;AAFD,aAJT;AAQE,YAAA,MAAM,EAAE;AACNC,cAAAA,EAAE,EAAE;AADE;AARV,YADF;AAcD;AAlCiC,OAArB;AAAA;AAFjB,KAwCE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAElB,YAFb;AAGE,IAAA,OAAO,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT;AAHX,IAxCF,EA6CE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,qBADP;AAEE,IAAA,SAAS,EAAElB,mBAFb;AAGE,IAAA,OAAO,EAAE;AAAEkB,MAAAA,KAAK,EAAE;AAAT;AAHX,IA7CF,EAkDE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,mBADP;AAEE,IAAA,SAAS,EAAEb,iBAFb;AAGE,IAAA,OAAO,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT;AAHX,IAlDF,CADF;AA0DD;;AAGD,eAAe,SAASC,UAAT,GAAsB;AACnC,SACE,oBAAC,mBAAD,QACE,oBAAC,aAAD,OADF,CADF;AAKD","sourcesContent":["/**\r\n * Used React Navigation for navigation:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport React from 'react';\r\n\r\nimport SearchScreen from '../screens/SearchScreen';\r\nimport { RootStackParamList } from '../types/navigation';\r\nimport CreatePokemonScreen from '../screens/CreatePokemonScreen';\r\nimport { Icon, IconButton, Image } from 'native-base';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport PokemonCardScreen from '../screens/PokemonCardScreen';\r\nimport { Pressable } from 'react-native';\r\n// Import didn't work with TS, so using require.\r\nconst pokemonball = require('../assets/images/pokemonball.png');\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator\r\n      // Screen options involve customizing nav bar\r\n      screenOptions={({ navigation }) => ({\r\n        headerLeft: () => null, // Remove back button\r\n        headerTitle: () => {\r\n          return (\r\n            <Pressable\r\n              accessibilityLabel=\"Navigate to home page\"\r\n              onPress={() => navigation.navigate('Root')}\r\n            >\r\n              <Image\r\n                ml={2}\r\n                borderRadius=\"xl\"\r\n                boxSize=\"30px\"\r\n                resizeMode=\"cover\"\r\n                src={pokemonball}\r\n                alt=\"pokeball home button\"\r\n              />\r\n            </Pressable>\r\n          );\r\n        },\r\n        headerRight: () => {\r\n          return (\r\n            <IconButton\r\n              aria-label=\"Search for pokemon\"\r\n              onPress={() => navigation.navigate('CreatePokemonScreen')}\r\n              icon={<Icon as={MaterialIcons} name=\"add-box\" />}\r\n              _icon={{\r\n                color: 'red.500',\r\n                size: 'xl',\r\n              }}\r\n              _hover={{\r\n                bg: 'red.500:alpha.20',\r\n              }}\r\n            />\r\n          );\r\n        },\r\n      })}\r\n    >\r\n      {/* The stack screens are the available routes. Names are used to reference in navigation */}\r\n      <Stack.Screen\r\n        name=\"Root\"\r\n        component={SearchScreen}\r\n        options={{ title: 'Pokedex' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"CreatePokemonScreen\"\r\n        component={CreatePokemonScreen}\r\n        options={{ title: 'Create Pokemon' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"PokemonCardScreen\"\r\n        component={PokemonCardScreen}\r\n        options={{ title: 'Pokemon card' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n// This is put in root of the application to offer the navigation\r\nexport default function Navigation() {\r\n  return (\r\n    <NavigationContainer>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}