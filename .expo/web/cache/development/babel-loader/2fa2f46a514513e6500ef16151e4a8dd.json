{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"./../../../utils\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Center = require(\"../../composites/Center\");\n\nvar _FormControl = require(\"../../composites/FormControl\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _toggle = require(\"@react-stately/toggle\");\n\nvar _visuallyHidden = require(\"@react-aria/visually-hidden\");\n\nvar _CheckboxGroup = require(\"./CheckboxGroup\");\n\nvar _interactions = require(\"@react-native-aria/interactions\");\n\nvar _checkbox = require(\"@react-native-aria/checkbox\");\n\nvar _focus = require(\"@react-native-aria/focus\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _utils2 = require(\"../../../theme/tools/utils\");\n\nvar _utils3 = require(\"../../../utils\");\n\nvar _SizedIcon = _interopRequireDefault(require(\"./SizedIcon\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Checkbox/Checkbox.web.tsx\";\n\nvar Checkbox = function Checkbox(_ref2, ref) {\n  var wrapperRef = _ref2.wrapperRef,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"wrapperRef\"]);\n  var formControlContext = (0, _FormControl.useFormControlContext)();\n\n  var _combineContextAndPro = (0, _utils3.combineContextAndProps)(formControlContext, props),\n      isInvalid = _combineContextAndPro.isInvalid,\n      isReadOnly = _combineContextAndPro.isReadOnly,\n      isIndeterminate = _combineContextAndPro.isIndeterminate,\n      combinedProps = (0, _objectWithoutProperties2.default)(_combineContextAndPro, [\"isInvalid\", \"isReadOnly\", \"isIndeterminate\"]);\n\n  var checkboxGroupContext = _react.default.useContext(_CheckboxGroup.CheckboxGroupContext);\n\n  var _ref = _react.default.useRef();\n\n  var mergedRef = (0, _utils.mergeRefs)([ref, _ref]);\n  var state = (0, _toggle.useToggleState)((0, _extends2.default)({}, props, {\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked\n  }));\n  var groupState = (0, _react.useContext)(_CheckboxGroup.CheckboxGroupContext);\n\n  var _useHover = (0, _interactions.useHover)({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _ref3 = groupState ? (0, _checkbox.useCheckboxGroupItem)((0, _extends2.default)({}, combinedProps, {\n    'aria-label': combinedProps.accessibilityLabel,\n    'value': combinedProps.value\n  }), groupState.state, mergedRef) : (0, _checkbox.useCheckbox)((0, _extends2.default)({}, combinedProps, {\n    'aria-label': combinedProps.accessibilityLabel\n  }), state, mergedRef),\n      inputProps = _ref3.inputProps;\n\n  var isChecked = inputProps.checked,\n      isDisabled = inputProps.disabled;\n\n  var _useFocusRing = (0, _focus.useFocusRing)(),\n      focusProps = _useFocusRing.focusProps,\n      isFocusVisible = _useFocusRing.isFocusVisible;\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Checkbox', (0, _extends2.default)({}, checkboxGroupContext, combinedProps), {\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isFocusVisible: isFocusVisible,\n    isDisabled: isDisabled,\n    isIndeterminate: isIndeterminate,\n    isChecked: isChecked,\n    isHovered: isHovered\n  }),\n      icon = _usePropsResolution.icon,\n      _interactionBox = _usePropsResolution._interactionBox,\n      _icon = _usePropsResolution._icon,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"icon\", \"_interactionBox\", \"_icon\"]);\n\n  var _extractInObject = (0, _utils2.extractInObject)(resolvedProps, [].concat((0, _toConsumableArray2.default)(_utils2.stylingProps.margin), (0, _toConsumableArray2.default)(_utils2.stylingProps.layout), (0, _toConsumableArray2.default)(_utils2.stylingProps.flexbox), (0, _toConsumableArray2.default)(_utils2.stylingProps.position), ['_text'])),\n      _extractInObject2 = (0, _slicedToArray2.default)(_extractInObject, 2),\n      layoutProps = _extractInObject2[0],\n      nonLayoutProps = _extractInObject2[1];\n\n  var component = _react.default.createElement(_Box.default, (0, _extends2.default)({}, layoutProps, {\n    opacity: isDisabled ? 0.4 : 1,\n    cursor: isDisabled ? 'not-allowed' : 'pointer',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_Center.Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({}, _interactionBox, {\n    style: {\n      transition: 'height 200ms, width 200ms'\n    },\n    h: isFocusVisible || isHovered || isChecked || isInvalid ? '200%' : '100%',\n    w: isFocusVisible || isHovered || isChecked || isInvalid ? '200%' : '100%',\n    zIndex: -1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_Center.Center, (0, _extends2.default)({}, nonLayoutProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_SizedIcon.default, {\n    icon: icon,\n    _icon: _icon,\n    isChecked: isChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }))), resolvedProps == null ? void 0 : resolvedProps.children);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(resolvedProps)) {\n    return null;\n  }\n\n  return _react.default.createElement(_Box.default, {\n    accessibilityRole: \"label\",\n    ref: (0, _utils.mergeRefs)([wrapperRef, _ref]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_visuallyHidden.VisuallyHidden, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(\"input\", (0, _extends2.default)({}, inputProps, focusProps, {\n    ref: mergedRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }))), component);\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Checkbox));\n\nexports.default = _default;","map":{"version":3,"sources":["Checkbox.web.tsx"],"names":["Checkbox","wrapperRef","props","formControlContext","isInvalid","isReadOnly","isIndeterminate","combinedProps","checkboxGroupContext","React","CheckboxGroupContext","_ref","mergedRef","state","defaultSelected","isSelected","groupState","isHovered","inputProps","isChecked","isDisabled","focusProps","isFocusVisible","icon","_interactionBox","_icon","resolvedProps","layoutProps","nonLayoutProps","stylingProps","component","transition"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,oBAAA;;AACA,IAAA,cAAA,GAAA,OAAA,gCAAA;;AACA,IAAA,OAAA,GAAA,OAAA,2BAAA;;AACA,IAAA,YAAA,GAAA,OAAA,gCAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,mBAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,wCAAA;;AACA,IAAA,OAAA,GAAA,OAAA,8BAAA;;AACA,IAAA,OAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,eAAA,CAAA;;;;;AAEA,IAAMA,QAAQ,GAARA,SAAAA,QAAAA,CAAW,KAAXA,EAAW,GAAXA,EAAmE;AAArDC,MAAAA,UAAqD,GAAA,KAAA,CAArDA,UAAAA;AAAAA,MAAeC,KAAsC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,YAAA,CAAA,CAArDD;AAClB,MAAME,kBAAkB,GAAG,CAAA,GAAA,YAAA,CAA3B,qBAA2B,GAA3B;;AADuE,MAAA,qBAAA,GAQnE,CAAA,GAAA,OAAA,CAAA,sBAAA,EAAA,kBAAA,EARmE,KAQnE,CARmE;AAAA,MAIrEC,SAJqE,GAAA,qBAAA,CAAA,SAAA;AAAA,MAKrEC,UALqE,GAAA,qBAAA,CAAA,UAAA;AAAA,MAMrEC,eANqE,GAAA,qBAAA,CAAA,eAAA;AAAA,MAOlEC,aAPkE,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,qBAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,CAAA;;AAUvE,MAAMC,oBAAoB,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,cAAAA,CAA9C,oBAA6BD,CAA7B;;AAEA,MAAME,IAAI,GAAGF,MAAAA,CAAAA,OAAAA,CAAb,MAAaA,EAAb;;AACA,MAAMG,SAAS,GAAG,CAAA,GAAA,MAAA,CAAA,SAAA,EAAU,CAAA,GAAA,EAA5B,IAA4B,CAAV,CAAlB;AAEA,MAAMC,KAAK,GAAG,CAAA,GAAA,OAAA,CAAA,cAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAEZC,IAAAA,eAAe,EAAEZ,KAAK,CAFV,gBAAA;AAGZa,IAAAA,UAAU,EAAEb,KAAK,CAHnB;AAAc,GAAA,CAAA,CAAd;AAKA,MAAMc,UAAU,GAAG,CAAA,GAAA,MAAA,CAAA,UAAA,EAAWN,cAAAA,CAA9B,oBAAmB,CAAnB;;AApBuE,MAAA,SAAA,GAqBjD,CAAA,GAAA,aAAA,CAAA,QAAA,EAAA,EAAA,EArBiD,IAqBjD,CArBiD;AAAA,MAqB/DO,SArB+D,GAAA,SAAA,CAAA,SAAA;;AAAA,MAAA,KAAA,GA0BhDD,UAAU,GAE7B,CAAA,GAAA,SAAA,CAAA,oBAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAGI,kBAAcT,aAAa,CAH/B,kBAAA;AAII,aAASA,aAAa,CAJ1B;AAAA,GAAA,CAAA,EAMES,UAAU,CANZ,KAAA,EAF6B,SAE7B,CAF6B,GAa7B,CAAA,GAAA,SAAA,CAAA,WAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAGI,kBAAcT,aAAa,CAH/B;AAAA,GAAA,CAAA,EAAA,KAAA,EAvCmE,SAuCnE,CAvCmE;AAAA,MA0B/DW,UA1B+D,GAAA,KAAA,CAAA,UAAA;;AAAA,MAiDtDC,SAjDsD,GAiDlBD,UAjDkB,CAAA,OAAA;AAAA,MAiDjCE,UAjDiC,GAiDlBF,UAjDkB,CAAA,QAAA;;AAAA,MAAA,aAAA,GAmDhC,CAAA,GAAA,MAAA,CAnDgC,YAmDhC,GAnDgC;AAAA,MAmD/DG,UAnD+D,GAAA,aAAA,CAAA,UAAA;AAAA,MAmDnDC,cAnDmD,GAAA,aAAA,CAAA,cAAA;;AAAA,MAAA,mBAAA,GAqDZ,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,UAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,oBAAA,EAAA,aAAA,CAAA,EAMzD;AACElB,IAAAA,SAAS,EADX,SAAA;AAEEC,IAAAA,UAAU,EAFZ,UAAA;AAGEiB,IAAAA,cAAc,EAHhB,cAAA;AAIEF,IAAAA,UAAU,EAJZ,UAAA;AAKEd,IAAAA,eAAe,EALjB,eAAA;AAMEa,IAAAA,SAAS,EANX,SAAA;AAOEF,IAAAA,SAAS,EAlE0D;AA2DrE,GANyD,CArDY;AAAA,MAqD/DM,IArD+D,GAAA,mBAAA,CAAA,IAAA;AAAA,MAqDzDC,eArDyD,GAAA,mBAAA,CAAA,eAAA;AAAA,MAqDxCC,KArDwC,GAAA,mBAAA,CAAA,KAAA;AAAA,MAqD9BC,aArD8B,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,MAAA,gBAAA,GAsEjC,CAAA,GAAA,OAAA,CAAA,eAAA,EAAA,aAAA,EAAA,GAAA,MAAA,CAAA,CAAA,GAAA,mBAAA,CAAA,OAAA,EACjCG,OAAAA,CAAAA,YAAAA,CADiC,MAAA,CAAA,EAAA,CAAA,GAAA,mBAAA,CAAA,OAAA,EAEjCA,OAAAA,CAAAA,YAAAA,CAFiC,MAAA,CAAA,EAAA,CAAA,GAAA,mBAAA,CAAA,OAAA,EAGjCA,OAAAA,CAAAA,YAAAA,CAHiC,OAAA,CAAA,EAAA,CAAA,GAAA,mBAAA,CAAA,OAAA,EAIjCA,OAAAA,CAAAA,YAAAA,CAJiC,QAAA,CAAA,EAAA,CAtEiC,OAsEjC,CAAA,CAAA,CAtEiC;AAAA,MAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAsEhEF,WAtEgE,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,MAsEnDC,cAtEmD,GAAA,iBAAA,CAAA,CAAA,CAAA;;AA8EvE,MAAME,SAAS,GACb,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,WAAA,EAAA;AAEE,IAAA,OAAO,EAAEV,UAAU,GAAA,GAAA,GAFrB,CAAA;AAGE,IAAA,MAAM,EAAEA,UAAU,GAAA,aAAA,GAHpB,SAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAKE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,MAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,eAAA,EAAA;AAEE,IAAA,KAAK,EAAE;AAELW,MAAAA,UAAU,EAJd;AAES,KAFT;AAME,IAAA,CAAC,EACCT,cAAc,IAAdA,SAAAA,IAAAA,SAAAA,IAAAA,SAAAA,GAAAA,MAAAA,GAPJ,MAAA;AAWE,IAAA,CAAC,EACCA,cAAc,IAAdA,SAAAA,IAAAA,SAAAA,IAAAA,SAAAA,GAAAA,MAAAA,GAZJ,MAAA;AAgBE,IAAA,MAAM,EAAE,CAhBV,CAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAFF;AAEE;AAAA,GAAA,CAAA,CAFF,EAqBE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,MAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,cAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAD,OAAA,EAAA;AAAW,IAAA,IAAI,EAAf,IAAA;AAAuB,IAAA,KAAK,EAA5B,KAAA;AAAqC,IAAA,SAAS,EAA9C,SAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EA5BN;AA4BM;AAAA,GAAA,CAFF,CArBF,CALF,EAgCGI,aAhCH,IAAA,IAgCGA,GAhCH,KAAA,CAgCGA,GAAAA,aAAa,CAjClB,QACE,CADF;;AAqCA,MAAI,CAAA,GAAA,sBAAA,CAAA,qBAAA,EAAJ,aAAI,CAAJ,EAA0C;AACxC,WAAA,IAAA;AAEF;;AAAA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA;AAEE,IAAA,iBAAiB,EAFnB,OAAA;AAGE,IAAA,GAAG,EAAE,CAAA,GAAA,MAAA,CAAA,SAAA,EAAU,CAAA,UAAA,EAHjB,IAGiB,CAAV,CAHP;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAKE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAD,cAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,UAAA,EAAA,UAAA,EAAA;AAAuC,IAAA,GAAG,EAA1C,SAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EANJ;AAMI;AAAA,GAAA,CAAA,CADF,CALF,EADF,SACE,CADF;AAtHF,CAAA;;eAqIe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,QAAK,CAAL,C","sourcesContent":["import React, { useContext, memo, forwardRef } from 'react';\nimport { mergeRefs } from './../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport type { ICheckboxProps } from './types';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { combineContextAndProps } from '../../../utils';\nimport SizedIcon from './SizedIcon';\n\nconst Checkbox = ({ wrapperRef, ...props }: ICheckboxProps, ref: any) => {\n  const formControlContext = useFormControlContext();\n\n  const {\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    ...combinedProps\n  } = combineContextAndProps(formControlContext, props);\n\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n\n  const _ref = React.useRef();\n  const mergedRef = mergeRefs([ref, _ref]);\n\n  const state = useToggleState({\n    ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked,\n  });\n  const groupState = useContext(CheckboxGroupContext);\n  const { isHovered } = useHover({}, _ref);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  const { inputProps } = groupState\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckboxGroupItem(\n        {\n          ...combinedProps,\n          'aria-label': combinedProps.accessibilityLabel,\n          'value': combinedProps.value,\n        },\n        groupState.state,\n        //@ts-ignore\n        mergedRef\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckbox(\n        {\n          ...combinedProps,\n          'aria-label': combinedProps.accessibilityLabel,\n        },\n        state,\n        //@ts-ignore\n        mergedRef\n      );\n\n  const { checked: isChecked, disabled: isDisabled } = inputProps;\n\n  const { focusProps, isFocusVisible } = useFocusRing();\n\n  const { icon, _interactionBox, _icon, ...resolvedProps } = usePropsResolution(\n    'Checkbox',\n    {\n      ...checkboxGroupContext,\n      ...combinedProps,\n    },\n    {\n      isInvalid,\n      isReadOnly,\n      isFocusVisible,\n      isDisabled,\n      isIndeterminate,\n      isChecked,\n      isHovered,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    '_text',\n  ]);\n\n  const component = (\n    <Box\n      {...layoutProps}\n      opacity={isDisabled ? 0.4 : 1}\n      cursor={isDisabled ? 'not-allowed' : 'pointer'}\n    >\n      <Center>\n        {/* Interaction Box */}\n        <Box\n          {..._interactionBox}\n          style={{\n            // @ts-ignore - only for web\"\n            transition: 'height 200ms, width 200ms',\n          }}\n          h={\n            isFocusVisible || isHovered || isChecked || isInvalid\n              ? '200%'\n              : '100%'\n          }\n          w={\n            isFocusVisible || isHovered || isChecked || isInvalid\n              ? '200%'\n              : '100%'\n          }\n          zIndex={-1}\n        />\n        {/* Checkbox */}\n        <Center {...nonLayoutProps}>\n          {/* {iconResolver()} */}\n          <SizedIcon icon={icon} _icon={_icon} isChecked={isChecked} />\n        </Center>\n      </Center>\n      {/* Label */}\n      {resolvedProps?.children}\n    </Box>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  return (\n    <Box\n      // @ts-ignore - RN web supports accessibilityRole=\"label\"\n      accessibilityRole=\"label\"\n      ref={mergeRefs([wrapperRef, _ref])}\n    >\n      <VisuallyHidden>\n        <input {...inputProps} {...focusProps} ref={mergedRef} />\n      </VisuallyHidden>\n\n      {component}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Checkbox));\n"]},"metadata":{},"sourceType":"script"}