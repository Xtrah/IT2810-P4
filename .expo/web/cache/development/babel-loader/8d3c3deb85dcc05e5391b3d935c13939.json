{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Spinner = _interopRequireDefault(require(\"../Spinner\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _HStack = _interopRequireDefault(require(\"../Stack/HStack\"));\n\nvar _Pressable = require(\"../Pressable\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _Pressable2 = require(\"../../primitives/Pressable/Pressable\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Button/Button.tsx\";\n\nvar Button = function Button(_ref, ref) {\n  var _props$accessibilityR;\n\n  var children = _ref.children,\n      startIcon = _ref.startIcon,\n      rightIcon = _ref.rightIcon,\n      leftIcon = _ref.leftIcon,\n      endIcon = _ref.endIcon,\n      spinner = _ref.spinner,\n      isDisabled = _ref.isDisabled,\n      isLoading = _ref.isLoading,\n      _ref$spinnerPlacement = _ref.spinnerPlacement,\n      spinnerPlacement = _ref$spinnerPlacement === void 0 ? 'start' : _ref$spinnerPlacement,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"startIcon\", \"rightIcon\", \"leftIcon\", \"endIcon\", \"spinner\", \"isDisabled\", \"isLoading\", \"spinnerPlacement\"]);\n\n  var _useHover = (0, _Pressable2.useHover)(),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _useIsPressed = (0, _Pressable2.useIsPressed)(),\n      pressableProps = _useIsPressed.pressableProps,\n      isPressed = _useIsPressed.isPressed;\n\n  var _useFocus = (0, _Pressable2.useFocus)(),\n      focusProps = _useFocus.focusProps,\n      isFocused = _useFocus.isFocused;\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Button', props, {\n    isDisabled: isDisabled,\n    isHovered: isHovered,\n    isFocused: isFocused,\n    isPressed: isPressed,\n    isLoading: isLoading\n  }, {\n    ignoreProps: ['_spinner']\n  }),\n      onPressIn = _usePropsResolution.onPressIn,\n      onPressOut = _usePropsResolution.onPressOut,\n      onHoverIn = _usePropsResolution.onHoverIn,\n      onHoverOut = _usePropsResolution.onHoverOut,\n      onFocus = _usePropsResolution.onFocus,\n      onBlur = _usePropsResolution.onBlur,\n      _text = _usePropsResolution._text,\n      _stack = _usePropsResolution._stack,\n      _spinner = _usePropsResolution._spinner,\n      isLoadingText = _usePropsResolution.isLoadingText,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\", \"_text\", \"_stack\", \"_spinner\", \"isLoadingText\"]);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (endIcon && _react.default.isValidElement(endIcon)) {\n    endIcon = _react.default.Children.map(endIcon, function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        key: \"button-end-icon-\" + index\n      }, _text, child.props));\n    });\n  }\n\n  if (startIcon && _react.default.isValidElement(startIcon)) {\n    startIcon = _react.default.Children.map(startIcon, function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        key: \"button-start-icon-\" + index\n      }, _text, child.props));\n    });\n  }\n\n  var boxChildren = isLoading && isLoadingText ? isLoadingText : children;\n  var spinnerElement = spinner ? spinner : _react.default.createElement(_Spinner.default, (0, _extends2.default)({\n    color: _text == null ? void 0 : _text.color\n  }, _spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }));\n  return _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({\n    disabled: isDisabled || isLoading,\n    ref: ref,\n    onPressIn: (0, _utils.composeEventHandlers)(onPressIn, pressableProps.onPressIn),\n    onPressOut: (0, _utils.composeEventHandlers)(onPressOut, pressableProps.onPressOut),\n    onHoverIn: (0, _utils.composeEventHandlers)(onHoverIn, hoverProps.onHoverIn),\n    onHoverOut: (0, _utils.composeEventHandlers)(onHoverOut, hoverProps.onHoverOut),\n    onFocus: (0, _utils.composeEventHandlers)((0, _utils.composeEventHandlers)(onFocus, focusProps.onFocus)),\n    onBlur: (0, _utils.composeEventHandlers)((0, _utils.composeEventHandlers)(onBlur, focusProps.onBlur))\n  }, resolvedProps, {\n    accessibilityRole: (_props$accessibilityR = props.accessibilityRole) != null ? _props$accessibilityR : 'button',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_HStack.default, (0, _extends2.default)({}, _stack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), startIcon && !isLoading ? startIcon : null, isLoading && spinnerPlacement === 'start' ? spinnerElement : null, boxChildren ? _react.default.createElement(_Box.default, {\n    _text: (0, _extends2.default)({}, _text),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, isLoading && isLoadingText ? isLoadingText : children) : null, endIcon && !isLoading ? endIcon : null, isLoading && spinnerPlacement === 'end' ? spinnerElement : null));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Button));\n\nexports.default = _default;","map":{"version":3,"sources":["Button.tsx"],"names":["Button","children","startIcon","rightIcon","leftIcon","endIcon","spinner","isDisabled","isLoading","spinnerPlacement","props","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","_text","_stack","_spinner","isLoadingText","resolvedProps","ignoreProps","React","key","child","boxChildren","spinnerElement"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,cAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,gCAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,gBAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,WAAA,GAAA,OAAA,wCAAA;;AAKA,IAAA,sBAAA,GAAA,OAAA,wCAAA;;;;;AAEA,IAAMA,MAAM,GAANA,SAAAA,MAAAA,CAAS,IAATA,EAAS,GAATA,EAeD;AAAA,MAAA,qBAAA;;AAZDC,MAAAA,QAYC,GAAA,IAAA,CAZDA,QAAAA;AAAAA,MACAC,SAWC,GAAA,IAAA,CAXDA,SADAD;AAAAA,MAEAE,SAUC,GAAA,IAAA,CAVDA,SAFAF;AAAAA,MAGAG,QASC,GAAA,IAAA,CATDA,QAHAH;AAAAA,MAIAI,OAQC,GAAA,IAAA,CARDA,OAJAJ;AAAAA,MAKAK,OAOC,GAAA,IAAA,CAPDA,OALAL;AAAAA,MAMAM,UAMC,GAAA,IAAA,CANDA,UANAN;AAAAA,MAOAO,SAKC,GAAA,IAAA,CALDA,SAPAP;AAAAA,MAYC,qBAAA,GAAA,IAAA,CAJDQ,gBARAR;AAAAA,MAQAQ,gBAIC,GAAA,qBAAA,KAAA,KAAA,CAAA,GAJkB,OAIlB,GAAA,qBAZDR;AAAAA,MASGS,KAGF,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,YAAA,EAAA,WAAA,EAAA,kBAAA,CAAA,CAZDT;;AAYC,MAAA,SAAA,GAC+B,CAAA,GAAA,WAAA,CAD/B,QAC+B,GAD/B;AAAA,MACKU,UADL,GAAA,SAAA,CAAA,UAAA;AAAA,MACiBC,SADjB,GAAA,SAAA,CAAA,SAAA;;AAAA,MAAA,aAAA,GAEmC,CAAA,GAAA,WAAA,CAFnC,YAEmC,GAFnC;AAAA,MAEKC,cAFL,GAAA,aAAA,CAAA,cAAA;AAAA,MAEqBC,SAFrB,GAAA,aAAA,CAAA,SAAA;;AAAA,MAAA,SAAA,GAG+B,CAAA,GAAA,WAAA,CAH/B,QAG+B,GAH/B;AAAA,MAGKC,UAHL,GAAA,SAAA,CAAA,UAAA;AAAA,MAGiBC,SAHjB,GAAA,SAAA,CAAA,SAAA;;AAAA,MAAA,mBAAA,GAiBC,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,KAAA,EAGF;AAAET,IAAAA,UAAU,EAAZ,UAAA;AAAcK,IAAAA,SAAS,EAAvB,SAAA;AAAyBI,IAAAA,SAAS,EAAlC,SAAA;AAAoCF,IAAAA,SAAS,EAA7C,SAAA;AAA+CN,IAAAA,SAAS,EAHtD;AAGF,GAHE,EAIF;AAAEoB,IAAAA,WAAW,EAAE,CArBd,UAqBc;AAAf,GAJE,CAjBD;AAAA,MAMDX,SANC,GAAA,mBAAA,CAAA,SAAA;AAAA,MAODC,UAPC,GAAA,mBAAA,CAAA,UAAA;AAAA,MAQDC,SARC,GAAA,mBAAA,CAAA,SAAA;AAAA,MASDC,UATC,GAAA,mBAAA,CAAA,UAAA;AAAA,MAUDC,OAVC,GAAA,mBAAA,CAAA,OAAA;AAAA,MAWDC,MAXC,GAAA,mBAAA,CAAA,MAAA;AAAA,MAYDC,KAZC,GAAA,mBAAA,CAAA,KAAA;AAAA,MAaDC,MAbC,GAAA,mBAAA,CAAA,MAAA;AAAA,MAcDC,QAdC,GAAA,mBAAA,CAAA,QAAA;AAAA,MAeDC,aAfC,GAAA,mBAAA,CAAA,aAAA;AAAA,MAgBEC,aAhBF,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,WAAA,EAAA,YAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,eAAA,CAAA,CAAA;;AAuDH,MAAI,CAAA,GAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,EAAkC;AAChC,WAAA,IAAA;AAGF;;AAAA,MAAA,QAAA,EAAc;AACZzB,IAAAA,SAAS,GAATA,QAAAA;AAEF;;AAAA,MAAA,SAAA,EAAe;AACbG,IAAAA,OAAO,GAAPA,SAAAA;AAEF;;AAAA,MAAIA,OAAO,IAAIwB,MAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAf,OAAeA,CAAf,EAA8C;AAC5CxB,IAAAA,OAAO,GAAGwB,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,OAAAA,EAER,UAAA,KAAA,EAAA,KAAA,EAAuC;AACrC,aAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA;AACLC,QAAAA,GAAG,EAAA,qBADED;AAAAA,OAAAA,EAAAA,KAAAA,EAGFE,KAAK,CAHV,KAAOF,CAAAA,CAAP;AAHJxB,KAAUwB,CAAVxB;AAWF;;AAAA,MAAIH,SAAS,IAAI2B,MAAAA,CAAAA,OAAAA,CAAAA,cAAAA,CAAjB,SAAiBA,CAAjB,EAAkD;AAChD3B,IAAAA,SAAS,GAAG2B,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,SAAAA,EAEV,UAAA,KAAA,EAAA,KAAA,EAAuC;AACrC,aAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA;AACLC,QAAAA,GAAG,EAAA,uBADED;AAAAA,OAAAA,EAAAA,KAAAA,EAGFE,KAAK,CAHV,KAAOF,CAAAA,CAAP;AAHJ3B,KAAY2B,CAAZ3B;AAYF;;AAAA,MAAM8B,WAAW,GAAGxB,SAAS,IAATA,aAAAA,GAAAA,aAAAA,GAApB,QAAA;AAEA,MAAMyB,cAAc,GAAG3B,OAAO,GAAA,OAAA,GAG5B,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AAAS,IAAA,KAAK,EAAEiB,KAAF,IAAA,IAAEA,GAAF,KAAA,CAAEA,GAAAA,KAAK,CAArB;AAAA,GAAA,EAAA,QAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAHF;AAGE;AAAA,GAAA,CAAA,CAHF;AAMA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAD,SAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,QAAQ,EAAEhB,UAAU,IADtB,SAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,SAAS,EAAE,CAAA,GAAA,MAAA,CAAA,oBAAA,EAAA,SAAA,EAAgCM,cAAc,CAH3D,SAGa,CAHb;AAIE,IAAA,UAAU,EAAE,CAAA,GAAA,MAAA,CAAA,oBAAA,EAAA,UAAA,EAAiCA,cAAc,CAJ7D,UAIc,CAJd;AAME,IAAA,SAAS,EAAE,CAAA,GAAA,MAAA,CAAA,oBAAA,EAAA,SAAA,EAAgCF,UAAU,CANvD,SAMa,CANb;AAQE,IAAA,UAAU,EAAE,CAAA,GAAA,MAAA,CAAA,oBAAA,EAAA,UAAA,EAAiCA,UAAU,CARzD,UAQc,CARd;AAUE,IAAA,OAAO,EAAE,CAAA,GAAA,MAAA,CAAA,oBAAA,EACP,CAAA,GAAA,MAAA,CAAA,oBAAA,EAAA,OAAA,EAA8BI,UAAU,CAX5C,OAWI,CADO,CAVX;AAeE,IAAA,MAAM,EAAE,CAAA,GAAA,MAAA,CAAA,oBAAA,EACN,CAAA,GAAA,MAAA,CAAA,oBAAA,EAAA,MAAA,EAA6BA,UAAU,CAhB3C,MAgBI,CADM;AAfV,GAAA,EAAA,aAAA,EAAA;AAuBE,IAAA,iBAAiB,EAAA,CAAA,qBAAA,GAAEL,KAAK,CAAP,iBAAA,KAAA,IAAA,GAAA,qBAAA,GAvBnB,QAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAyBE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,OAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,MAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACGR,SAAS,IAAI,CAAbA,SAAAA,GAAAA,SAAAA,GADH,IAAA,EAEGM,SAAS,IAAIC,gBAAgB,KAA7BD,OAAAA,GAAAA,cAAAA,GAFH,IAAA,EAGGwB,WAAW,GACV,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,EAAA;AACE,IAAA,KAAK,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EADP,KACO,CADP;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAWGxB,SAAS,IAATA,aAAAA,GAAAA,aAAAA,GAZO,QACV,CADU,GAHd,IAAA,EAmBGH,OAAO,IAAI,CAAXA,SAAAA,GAAAA,OAAAA,GAnBH,IAAA,EAoBGG,SAAS,IAAIC,gBAAgB,KAA7BD,KAAAA,GAAAA,cAAAA,GA9CP,IA0BI,CAzBF,CADF;AAjHF,CAAA;;eAqKe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,MAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    spinnerPlacement = 'start',\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Button',\n    props,\n    { isDisabled, isHovered, isFocused, isPressed, isLoading },\n    { ignoreProps: ['_spinner'] }\n  );\n\n  // const pressableProps = {\n  //   ...resolvedProps,\n  //   _hover,\n  //   _pressed,\n  //   _focus,\n  //   _focusVisible,\n  // };\n  // let {\n  //   _text,\n  //   _disabled,\n  //   _focus,\n  //   _hover,\n  //   _pressed,\n  //   _focusVisible,\n  //   _loading,\n  //   _stack,\n  //   _spinner,\n  //   spinnerProps,\n  //   isLoadingText,\n  //   ...resolvedProps\n  // } = usePropsResolution('Button', props);\n\n  // const pressableProps = {\n  //   ...resolvedProps,\n  //   _hover,\n  //   _pressed,\n  //   _focus,\n  //   _focusVisible,\n  // };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  const boxChildren = isLoading && isLoadingText ? isLoadingText : children;\n\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus)\n        // focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur)\n        // focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n      // {...pressableProps}\n      // {...(isDisabled && _disabled)}\n      // {...(isLoading && _loading)}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n    >\n      <HStack {..._stack}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {boxChildren ? (\n          <Box\n            _text={{\n              ..._text,\n              // ...hoverTextProps,\n              // ...focusTextProps,\n              // ...focusVisibleTextProps,\n              // ...pressedTextProps,\n              // ...loadingTextProps,\n              // ...disabledTextProps,\n            }}\n          >\n            {isLoading && isLoadingText ? isLoadingText : children}\n          </Box>\n        ) : null}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n"]},"metadata":{},"sourceType":"script"}