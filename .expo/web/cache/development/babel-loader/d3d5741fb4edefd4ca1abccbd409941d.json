{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Stack = require(\"../Stack\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/List/Unordered.tsx\";\n\nvar UnorderedList = function UnorderedList(_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('List', props),\n      _text = _usePropsResolution._text,\n      _hover = _usePropsResolution._hover,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_text\", \"_hover\"]);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  children = _react.default.Children.map(children, function (child, ind) {\n    return _react.default.cloneElement(child, (0, _extends2.default)({\n      index: ind,\n      ul: true,\n      _text: _text,\n      _hover: _hover\n    }, child.props), child.props.children);\n  });\n  return _react.default.createElement(_Stack.VStack, (0, _extends2.default)({}, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nvar _default = _react.default.memo(_react.default.forwardRef(UnorderedList));\n\nexports.default = _default;","map":{"version":3,"sources":["Unordered.tsx"],"names":["UnorderedList","children","props","_text","_hover","resolvedProps","React","index","ul","child"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,YAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,wCAAA;;;;;AAEA,IAAMA,aAAa,GAAbA,SAAAA,aAAAA,CAAgB,IAAhBA,EAAgB,GAAhBA,EAAmE;AAAhDC,MAAAA,QAAgD,GAAA,IAAA,CAAhDA,QAAAA;AAAAA,MAAaC,KAAmC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAhDD;;AAAgD,MAAA,mBAAA,GAC3B,CAAA,GAAA,MAAA,CAAA,kBAAA,EAAA,MAAA,EAD2B,KAC3B,CAD2B;AAAA,MAC/DE,KAD+D,GAAA,mBAAA,CAAA,KAAA;AAAA,MACxDC,MADwD,GAAA,mBAAA,CAAA,MAAA;AAAA,MAC7CC,aAD6C,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;;AAGvE,MAAI,CAAA,GAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,EAAkC;AAChC,WAAA,IAAA;AAGFJ;;AAAAA,EAAAA,QAAQ,GAAGK,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAA6B;AACnE,WAAOA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAAAA,CAAAA,GAAAA,SAAAA,CAAAA,OAAAA,EAAAA;AAGHC,MAAAA,KAAK,EAHFD,GAAAA;AAIHE,MAAAA,EAAE,EAJCF,IAAAA;AAKHH,MAAAA,KAAK,EALFG,KAAAA;AAMHF,MAAAA,MAAM,EANHE;AAAAA,KAAAA,EAOAG,KAAK,CAPLH,KAAAA,CAAAA,EASLG,KAAK,CAALA,KAAAA,CATF,QAAOH,CAAP;AADFL,GAAWK,CAAXL;AAcA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,MAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,aAAA,EAAA;AAA2B,IAAA,GAAG,EAA9B,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADF,QACE,CADF;AArBF,CAAA;;eA4BeK,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,aAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst UnorderedList = ({ children, ...props }: IListProps, ref?: any) => {\n  const { _text, _hover, ...resolvedProps } = usePropsResolution('List', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        index: ind,\n        ul: true,\n        _text: _text,\n        _hover,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n\n  return (\n    <VStack {...resolvedProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(UnorderedList));\n"]},"metadata":{},"sourceType":"script"}