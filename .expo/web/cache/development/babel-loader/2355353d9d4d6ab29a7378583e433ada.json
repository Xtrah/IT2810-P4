{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Pressable = require(\"../../primitives/Pressable\");\n\nvar _Icon = require(\"../../primitives/Icon\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _Pressable2 = require(\"../../primitives/Pressable/Pressable\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/IconButton/index.tsx\";\n\nvar IconButton = function IconButton(_ref, ref) {\n  var icon = _ref.icon,\n      children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"icon\", \"children\"]);\n\n  var _useHover = (0, _Pressable2.useHover)(),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _useIsPressed = (0, _Pressable2.useIsPressed)(),\n      pressableProps = _useIsPressed.pressableProps,\n      isPressed = _useIsPressed.isPressed;\n\n  var _useFocus = (0, _Pressable2.useFocus)(),\n      focusProps = _useFocus.focusProps,\n      isFocused = _useFocus.isFocused;\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('IconButton', props, {\n    isHovered: isHovered,\n    isPressed: isPressed,\n    isFocused: isFocused\n  }),\n      _icon = _usePropsResolution._icon,\n      onPressIn = _usePropsResolution.onPressIn,\n      onPressOut = _usePropsResolution.onPressOut,\n      onHoverIn = _usePropsResolution.onHoverIn,\n      onHoverOut = _usePropsResolution.onHoverOut,\n      onFocus = _usePropsResolution.onFocus,\n      onBlur = _usePropsResolution.onBlur,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_icon\", \"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\"]);\n\n  var clonedIcon;\n\n  if (icon) {\n    clonedIcon = _react.default.cloneElement(icon, (0, _extends2.default)({}, _icon));\n  }\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({\n    accessibilityRole: \"button\",\n    ref: ref,\n    onPressIn: (0, _utils.composeEventHandlers)(onPressIn, pressableProps.onPressIn),\n    onPressOut: (0, _utils.composeEventHandlers)(onPressOut, pressableProps.onPressOut),\n    onHoverIn: (0, _utils.composeEventHandlers)(onHoverIn, hoverProps.onHoverIn),\n    onHoverOut: (0, _utils.composeEventHandlers)(onHoverOut, hoverProps.onHoverOut),\n    onFocus: (0, _utils.composeEventHandlers)((0, _utils.composeEventHandlers)(onFocus, focusProps.onFocus)),\n    onBlur: (0, _utils.composeEventHandlers)((0, _utils.composeEventHandlers)(onBlur, focusProps.onBlur))\n  }, resolvedProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), clonedIcon || _react.default.createElement(_Icon.Icon, (0, _extends2.default)({}, _icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  }), children));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(IconButton));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["IconButton","icon","children","props","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","clonedIcon","React"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport { Icon } from '../../primitives/Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IIconButtonProps } from './types';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\n\nconst IconButton = (\n  { icon, children, ...props }: IIconButtonProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('IconButton', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n  });\n\n  let clonedIcon;\n  if (icon) {\n    clonedIcon = React.cloneElement(icon, {\n      ..._icon,\n    });\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus)\n        // focusRingProps.onFocu\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur)\n        // focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {clonedIcon || <Icon {..._icon}>{children}</Icon>}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(IconButton));\nexport type { IIconButtonProps };\n"]},"metadata":{},"sourceType":"script"}