{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport { Box, Button, Center, Collapse, HStack, Select, Text } from \"native-base\";\nimport React, { useState } from \"react\";\nimport pokemonTypes from \"../constants/pokemonTypes\";\nimport { GET_POKEMONS_LIMITED, GET_POKEMON_FILTER } from \"../utils/queries\";\n\nvar _useLazyQuery = useLazyQuery(GET_POKEMONS_LIMITED, {\n  variables: {\n    name: searchText\n  }\n}),\n    _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n    getQuery = _useLazyQuery2[0],\n    _useLazyQuery2$ = _useLazyQuery2[1],\n    data = _useLazyQuery2$.data,\n    loading = _useLazyQuery2$.loading,\n    error = _useLazyQuery2$.error,\n    fetchMore = _useLazyQuery2$.fetchMore;\n\nvar setFilter = function setFilter() {\n  getQuery({\n    variables: {\n      sortDescending: sortDescending,\n      type: pokemonTypes\n    }\n  });\n};\n\nvar SearchFilter = function SearchFilter(_ref) {\n  var show = _ref.show;\n\n  var _useQuery = useQuery(GET_POKEMON_FILTER),\n      filterData = _useQuery.data;\n\n  var _useState = useState(filterData.pokemonFilter.sortDescending),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemonSort = _useState2[0],\n      setPokemonSort = _useState2[1];\n\n  return React.createElement(Collapse, {\n    isOpen: show\n  }, React.createElement(Box, {\n    p: \"10px\",\n    alignSelf: \"stretch\",\n    m: 2,\n    borderWidth: 2,\n    borderColor: \"red.500\",\n    rounded: \"md\",\n    shadow: \"md\"\n  }, React.createElement(HStack, null, React.createElement(Box, {\n    p: 4\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    fontSize: \"md\"\n  }, \"Filter types:\")), React.createElement(Center, null, React.createElement(Select, {\n    defaultValue: \"\",\n    placeholder: \"Choose type\",\n    onValueChange: function onValueChange(pokemonType) {\n      return setPokemonSort(pokemonType);\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Show all\",\n    value: \"\"\n  }), pokemonTypes.map(function (type) {\n    return React.createElement(Select.Item, {\n      label: type,\n      key: type,\n      value: type\n    }, type);\n  })))), React.createElement(HStack, null, React.createElement(Box, {\n    p: 4\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    fontSize: \"md\"\n  }, \"Sort names:\")), React.createElement(Center, null, React.createElement(Select, {\n    placeholder: \"Sort by\",\n    defaultValue: \"false\",\n    onValueChange: function onValueChange(sortDescending) {\n      return setPokemonSort(sortDescending);\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Ascending\",\n    value: \"false\"\n  }), React.createElement(Select.Item, {\n    label: \"Descending\",\n    value: \"true\"\n  })))), React.createElement(Button, {\n    onPress: setFilter\n  }, \"Set filter\")));\n};\n\nexport default SearchFilter;","map":{"version":3,"sources":["/Users/henrikvl/Documents/NTNU/WebDev/project4/components/SearchFilter.tsx"],"names":["useLazyQuery","useQuery","Box","Button","Center","Collapse","HStack","Select","Text","React","useState","pokemonTypes","GET_POKEMONS_LIMITED","GET_POKEMON_FILTER","variables","name","searchText","getQuery","data","loading","error","fetchMore","setFilter","sortDescending","type","SearchFilter","show","filterData","pokemonFilter","pokemonSort","setPokemonSort","pokemonType","map"],"mappings":"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","sourcesContent":["import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  Center,\n  Collapse,\n  Heading,\n  HStack,\n  NativeBaseProvider,\n  Select,\n  Text,\n} from \"native-base\";\nimport React, { useState, ChangeEvent } from \"react\";\nimport { textStyle } from \"styled-system\";\nimport pokemonTypes from \"../constants/pokemonTypes\";\nimport { GET_POKEMONS_LIMITED, GET_POKEMON_FILTER } from \"../utils/queries\";\n\ninterface Props {\n  show: boolean;\n}\n\nconst [getQuery, { data, loading, error, fetchMore }] = useLazyQuery(\n  GET_POKEMONS_LIMITED,\n  {\n    variables: {\n      name: searchText,\n    },\n  }\n);\n\nconst setFilter = () => {\n  getQuery({\n    variables: {\n      sortDescending: sortDescending,\n      type: pokemonTypes,\n    },\n  });\n};\n\nconst SearchFilter = ({ show }: Props) => {\n  // Get filter to initialize select value\n  const { data: filterData } = useQuery(GET_POKEMON_FILTER);\n  const [pokemonSort, setPokemonSort] = useState(\n    filterData.pokemonFilter.sortDescending\n  );\n\n  /* function handleSortChange(e: ChangeEvent<HTMLSelectElement>) {\n    const sortDescending = e.target.value === \"true\";\n    setPokemonSort(e.target.value);\n    setPokemonFilter({\n      type: pokemonFilterVar().type,\n      sortDescending,\n    });\n  } */\n\n  return (\n    <Collapse isOpen={show}>\n      <Box\n        p=\"10px\"\n        alignSelf=\"stretch\"\n        m={2}\n        borderWidth={2}\n        borderColor=\"red.500\"\n        rounded=\"md\"\n        shadow=\"md\"\n      >\n        <HStack>\n          <Box p={4}>\n            <Text fontWeight=\"500\" fontSize=\"md\">\n              Filter types:\n            </Text>\n          </Box>\n\n          <Center>\n            <Select\n              defaultValue=\"\"\n              placeholder=\"Choose type\"\n              onValueChange={(pokemonType) => setPokemonSort(pokemonType)}\n            >\n              <Select.Item label=\"Show all\" value=\"\" />\n              {pokemonTypes.map((type: string) => (\n                <Select.Item label={type} key={type} value={type}>\n                  {type}\n                </Select.Item>\n              ))}\n            </Select>\n          </Center>\n        </HStack>\n        <HStack>\n          <Box p={4}>\n            <Text fontWeight=\"500\" fontSize=\"md\">\n              Sort names:\n            </Text>\n          </Box>\n\n          <Center>\n            <Select\n              placeholder=\"Sort by\"\n              defaultValue=\"false\"\n              onValueChange={(sortDescending) => setPokemonSort(sortDescending)}\n            >\n              <Select.Item label=\"Ascending\" value=\"false\" />\n              <Select.Item label=\"Descending\" value=\"true\" />\n            </Select>\n          </Center>\n        </HStack>\n        <Button onPress={setFilter}>Set filter</Button>\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default SearchFilter;\n"]},"metadata":{},"sourceType":"module"}