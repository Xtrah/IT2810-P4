{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Avatar/Avatar.tsx\";\n\nvar Avatar = function Avatar(_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      error = _React$useState2[0],\n      setError = _React$useState2[1];\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Avatar', props),\n      _text = _usePropsResolution._text,\n      source = _usePropsResolution.source,\n      style = _usePropsResolution.style,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_text\", \"source\", \"style\"]);\n\n  var Badge = _react.default.createElement(_react.default.Fragment, null);\n\n  var remainingChildren = [];\n\n  _react.default.Children.map(children, function (child, key) {\n    if (typeof (child == null ? void 0 : child.type) === 'object' && (child == null ? void 0 : child.type.displayName) === 'AvatarBadge') {\n      Badge = child;\n    } else {\n      remainingChildren.push(typeof child === 'string' || typeof child === 'number' ? _react.default.createElement(_primitives.Text, (0, _extends2.default)({\n        key: 'avatar-children-' + key\n      }, _text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }), child) : child);\n    }\n  });\n\n  var imageFitStyle = {\n    height: '100%',\n    width: '100%'\n  };\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react.default.createElement(_primitives.Box, (0, _extends2.default)({}, resolvedProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), source && !error ? _react.default.createElement(_primitives.Image, {\n    borderRadius: resolvedProps.borderRadius,\n    source: source,\n    alt: '--',\n    _alt: _text,\n    style: [style, imageFitStyle],\n    onError: function onError() {\n      setError(true);\n    },\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }) : remainingChildren.length !== 0 && remainingChildren, Badge);\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Avatar));\n\nexports.default = _default;","map":{"version":3,"sources":["Avatar.tsx"],"names":["Avatar","children","props","error","setError","React","_text","source","style","resolvedProps","Badge","remainingChildren","child","imageFitStyle","height","width"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image, Text } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Avatar = ({ children, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { _text, source, style, ...resolvedProps } = usePropsResolution(\n    'Avatar',\n    props\n  );\n\n  let Badge = <></>;\n  const remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child, key) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = child;\n    } else {\n      remainingChildren.push(\n        typeof child === 'string' || typeof child === 'number' ? (\n          <Text key={'avatar-children-' + key} {..._text}>\n            {child}\n          </Text>\n        ) : (\n          child\n        )\n      );\n    }\n  });\n\n  const imageFitStyle: any = { height: '100%', width: '100%' };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps}>\n      {source && !error ? (\n        <Image\n          borderRadius={resolvedProps.borderRadius}\n          source={source}\n          alt={'--'}\n          _alt={_text}\n          style={[style, imageFitStyle]}\n          onError={() => {\n            setError(true);\n          }}\n          ref={ref}\n        />\n      ) : (\n        remainingChildren.length !== 0 && remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]},"metadata":{},"sourceType":"script"}