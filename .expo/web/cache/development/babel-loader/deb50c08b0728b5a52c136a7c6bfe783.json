{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModalOverlay = exports.ModalFooter = exports.ModalBody = exports.ModalHeader = exports.ModalCloseButton = exports.ModalContent = exports.Modal = void 0;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _tools = require(\"../tools\");\n\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nvar Modal = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexports.Modal = Modal;\nvar ModalContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: (0, _tools.mode)('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: _reactNative.Dimensions.get('window').height - 150 + \"px\",\n      overflow: 'hidden'\n    };\n  }\n};\nexports.ModalContent = ModalContent;\nvar ModalCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexports.ModalCloseButton = ModalCloseButton;\nvar ModalHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: (0, _tools.mode)('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexports.ModalHeader = ModalHeader;\nvar ModalBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: (0, _tools.mode)('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexports.ModalBody = ModalBody;\nvar ModalFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: '3',\n      bg: (0, _tools.mode)('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexports.ModalFooter = ModalFooter;\nvar ModalOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\nexports.ModalOverlay = ModalOverlay;","map":{"version":3,"sources":["modal.ts"],"names":["sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","Modal","baseStyle","height","justifyContent","alignItems","defaultProps","size","closeOnOverlayClick","ModalContent","bg","_text","color","shadow","rounded","maxHeight","Dimensions","overflow","ModalCloseButton","position","right","top","zIndex","colorScheme","p","_icon","ModalHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","ModalBody","pt","ModalFooter","flexDirection","flexWrap","ModalOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport { mode } from '../tools';\n\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280',\n    },\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320',\n    },\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380',\n    },\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520',\n    },\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580',\n    },\n  },\n  full: {\n    contentSize: {\n      width: '100%',\n    },\n  },\n};\n\nexport const Modal = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true,\n  },\n};\n\nexport const ModalContent = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: { color: mode('coolGray.800', 'warmGray.50')(props) },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: `${Dimensions.get('window').height - 150}px`,\n      overflow: 'hidden',\n    };\n  },\n};\nexport const ModalCloseButton = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props),\n      },\n    };\n  },\n};\nexport const ModalHeader = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm',\n      },\n    };\n  },\n};\nexport const ModalBody = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props),\n      },\n    };\n  },\n};\nexport const ModalFooter = {\n  baseStyle: (props: Record<string, any>) => {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap',\n    };\n  },\n};\nexport const ModalOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0',\n  },\n};\n"]},"metadata":{},"sourceType":"script"}