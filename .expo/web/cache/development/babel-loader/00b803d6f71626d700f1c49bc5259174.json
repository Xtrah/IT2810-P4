{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePropsResolution = usePropsResolution;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.merge\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _useNativeBase2 = require(\"../useNativeBase\");\n\nvar _colorMode = require(\"../../core/color-mode\");\n\nvar _tools = require(\"../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nvar _useBreakpointResolvedProps = require(\"../useBreakpointResolvedProps\");\n\nvar _propsFlattener9 = require(\"./propsFlattener\");\n\nvar _useResponsiveSSRProps = require(\"../useResponsiveSSRProps\");\n\nvar SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [].concat((0, _toConsumableArray2.default)(MARGIN_MAP.mx), (0, _toConsumableArray2.default)(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [].concat((0, _toConsumableArray2.default)(PADDING_MAP.px), (0, _toConsumableArray2.default)(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nvar SPREAD_PROP_SPECIFICITY_MAP = (0, _extends2.default)({}, PADDING_MAP, MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = (0, _extends2.default)({}, incomingProps);\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if ((0, _propsFlattener9.compareSpecificity)(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return (0, _lodash2.default)({}, flattenedDefaultProps);\n}\n\nfunction usePropsResolution(component, incomingProps, state, config) {\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  var modifiedPropsForSSR = (0, _useResponsiveSSRProps.useResponsiveSSRProps)(incomingProps);\n\n  var _extractInObject = (0, _tools.extractInObject)(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config == null ? void 0 : config.ignoreProps) || [])),\n      _extractInObject2 = (0, _slicedToArray2.default)(_extractInObject, 2),\n      ignoredProps = _extractInObject2[0],\n      cleanIncomingProps = _extractInObject2[1];\n\n  var resolveResponsively = ['colorScheme', 'size', 'variant'].concat((0, _toConsumableArray2.default)((config == null ? void 0 : config.resolveResponsively) || []));\n\n  var _useNativeBase = (0, _useNativeBase2.useNativeBase)(),\n      theme = _useNativeBase.theme;\n\n  var colorModeProps = (0, _colorMode.useColorMode)();\n  var componentTheme = (0, _lodash.default)(theme, \"components.\" + component, {});\n  var incomingWithDefaultProps = (0, _lodash2.default)({}, componentTheme.defaultProps || {}, cleanIncomingProps);\n\n  var _propsFlattener = (0, _propsFlattener9.propsFlattener)({\n    props: incomingWithDefaultProps,\n    platform: _reactNative.Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {}\n  }, 2),\n      _propsFlattener2 = (0, _slicedToArray2.default)(_propsFlattener, 2),\n      flattenProps = _propsFlattener2[0],\n      specificityMap = _propsFlattener2[1];\n\n  var responsiveProps = {};\n  resolveResponsively.map(function (propsName) {\n    if (flattenProps[propsName]) {\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n  var responsivelyResolvedProps = (0, _useBreakpointResolvedProps.useBreakpointResolvedProps)(responsiveProps);\n  flattenProps = (0, _extends2.default)({}, flattenProps, responsivelyResolvedProps);\n  var componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle((0, _extends2.default)({\n      theme: theme\n    }, flattenProps, colorModeProps));\n\n    var _propsFlattener3 = (0, _propsFlattener9.propsFlattener)({\n      props: componentBaseStyle,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n\n    var _propsFlattener4 = (0, _slicedToArray2.default)(_propsFlattener3, 2);\n\n    flattenBaseStyle = _propsFlattener4[0];\n    baseSpecificityMap = _propsFlattener4[1];\n  }\n\n  var variant = flattenProps.variant;\n  var componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap;\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant]((0, _extends2.default)({\n      theme: theme\n    }, flattenProps, colorModeProps));\n\n    var _propsFlattener5 = (0, _propsFlattener9.propsFlattener)({\n      props: componentVariantProps,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n\n    var _propsFlattener6 = (0, _slicedToArray2.default)(_propsFlattener5, 2);\n\n    flattenVariantStyle = _propsFlattener6[0];\n    variantSpecificityMap = _propsFlattener6[1];\n    flattenProps.variant = undefined;\n  }\n\n  var size = flattenProps.size;\n  var componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap;\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size];\n    } else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size]((0, _extends2.default)({\n        theme: theme\n      }, flattenProps, colorModeProps));\n    } else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    var _propsFlattener7 = (0, _propsFlattener9.propsFlattener)({\n      props: componentSizeProps,\n      platform: _reactNative.Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps\n    }, 1);\n\n    var _propsFlattener8 = (0, _slicedToArray2.default)(_propsFlattener7, 2);\n\n    flattenSizeStyle = _propsFlattener8[0];\n    sizeSpecificityMap = _propsFlattener8[1];\n  }\n\n  var defaultStyles = (0, _lodash2.default)({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (var prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = (0, _lodash2.default)({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader((0, _extends2.default)({}, defaultStyles, flattenProps), defaultSpecificity);\n  var ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) != null && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) != null && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) != null && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) != null && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    var bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) != null && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) != null && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) != null && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(function (color) {\n      return (0, _lodash.default)(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n\n  var _extractInObject3 = (0, _tools.extractInObject)(flattenProps, ignore),\n      _extractInObject4 = (0, _slicedToArray2.default)(_extractInObject3, 1),\n      gradientProps = _extractInObject4[0];\n\n  var bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) != null ? _flattenProps$bg2 : flattenProps.backgroundColor) != null ? _ref : flattenProps.bgColor;\n  var contrastTextColor = (0, _useContrastText.useContrastText)(bgColor, (_flattenProps = flattenProps) == null ? void 0 : (_flattenProps$_text = _flattenProps._text) == null ? void 0 : _flattenProps$_text.color);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) == null ? void 0 : (_flattenProps2$_text = _flattenProps2._text) == null ? void 0 : _flattenProps2$_text.color) === undefined ? (0, _extends2.default)({\n    color: contrastTextColor\n  }, flattenProps._text) : flattenProps._text;\n  var resolvedProps = (0, _tools.omitUndefined)((0, _extends2.default)({}, flattenProps, ignoredProps, gradientProps));\n  return resolvedProps;\n}","map":{"version":3,"sources":["usePropsResolution.tsx"],"names":["SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","PADDING_MAP","px","py","pt","pb","pr","pl","SPREAD_PROP_SPECIFICITY_MAP","flattenedDefaultProps","specificity","prop","val","incomingProps","incomingSpecifity","modifiedPropsForSSR","ignoredProps","cleanIncomingProps","resolveResponsively","theme","colorModeProps","componentTheme","incomingWithDefaultProps","flattenProps","specificityMap","props","platform","Platform","colormode","state","previouslyFlattenProps","responsiveProps","responsivelyResolvedProps","componentBaseStyle","flattenBaseStyle","baseSpecificityMap","currentSpecificityMap","variant","componentVariantProps","flattenVariantStyle","variantSpecificityMap","size","componentSizeProps","flattenSizeStyle","sizeSpecificityMap","defaultStyles","defaultSpecificity","propsSpreader","ignore","bgProp","gradientProps","bgColor","contrastTextColor","color","resolvedProps"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\n\nconst SPREAD_PROP_SPECIFICITY_ORDER = [\n  'p',\n  'padding',\n  'px',\n  'py',\n  'pt',\n  'pb',\n  'pl',\n  'pr',\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'm',\n  'margin',\n  'mx',\n  'my',\n  'mt',\n  'mb',\n  'ml',\n  'mr',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst FINAL_SPREAD_PROPS = [\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst MARGIN_MAP: any = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft'],\n};\n\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\n\nconst PADDING_MAP: any = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft'],\n};\n\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nconst SPREAD_PROP_SPECIFICITY_MAP: any = {\n  ...PADDING_MAP,\n  ...MARGIN_MAP,\n};\n\nfunction propsSpreader(incomingProps: any, incomingSpecifity: any) {\n  const flattenedDefaultProps: any = { ...incomingProps };\n  const specificity: any = {};\n\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach((prop) => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach((newProp: string) => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n\n  return merge({}, flattenedDefaultProps);\n}\n\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\nexport function usePropsResolution(\n  component: string,\n  incomingProps: any,\n  state?: any,\n  config?: any\n) {\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  const [ignoredProps, cleanIncomingProps] = extractInObject(\n    modifiedPropsForSSR,\n    ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat(\n      config?.ignoreProps || []\n    )\n  );\n  const resolveResponsively = [\n    'colorScheme',\n    'size',\n    'variant',\n    ...(config?.resolveResponsively || []),\n  ];\n\n  const { theme } = useNativeBase();\n  const colorModeProps = useColorMode();\n\n  const componentTheme = get(theme, `components.${component}`, {});\n\n  // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge(\n    {},\n    componentTheme.defaultProps || {},\n    cleanIncomingProps\n  );\n  // STEP 2: flatten them\n\n  let [flattenProps, specificityMap] = propsFlattener(\n    {\n      props: incomingWithDefaultProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      previouslyFlattenProps: {},\n    },\n    2\n  );\n\n  // STEP 2.5: resolving responsive props\n  const responsiveProps = {};\n  resolveResponsively.map((propsName) => {\n    if (flattenProps[propsName]) {\n      // @ts-ignore\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n\n  flattenProps = {\n    ...flattenProps,\n    ...responsivelyResolvedProps,\n  };\n  // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n\n  // NOTE: Resoloving baseStyle\n  let componentBaseStyle = {},\n    flattenBaseStyle,\n    baseSpecificityMap;\n  if (componentTheme.baseStyle) {\n    componentBaseStyle =\n      typeof componentTheme.baseStyle !== 'function'\n        ? componentTheme.baseStyle\n        : componentTheme.baseStyle({\n            theme,\n            ...flattenProps,\n            ...colorModeProps,\n          });\n\n    [flattenBaseStyle, baseSpecificityMap] = propsFlattener(\n      {\n        props: componentBaseStyle,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: specificityMap,\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n  }\n\n  // NOTE: Resolving variants\n\n  const variant = flattenProps.variant;\n\n  let componentVariantProps = {},\n    flattenVariantStyle,\n    variantSpecificityMap;\n  // Extracting props from variant\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps =\n      typeof componentTheme.variants[variant] !== 'function'\n        ? componentTheme.variants[variant]\n        : componentTheme.variants[variant]({\n            theme,\n            ...flattenProps,\n            ...colorModeProps,\n          });\n\n    [flattenVariantStyle, variantSpecificityMap] = propsFlattener(\n      {\n        props: componentVariantProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: baseSpecificityMap || specificityMap,\n        // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    flattenProps.variant = undefined;\n  }\n\n  // NOTE: Resolving size\n\n  const size = flattenProps.size;\n\n  let componentSizeProps = {},\n    flattenSizeStyle,\n    sizeSpecificityMap;\n  // Extracting props from size\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (\n      typeof componentTheme.sizes[size] === 'string' ||\n      typeof componentTheme.sizes[size] === 'number'\n    ) {\n      flattenProps.size = componentTheme.sizes[size];\n      //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    }\n    // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size]({\n        theme,\n        ...flattenProps,\n        ...colorModeProps,\n      });\n    }\n    // Type - sizes: {lg: {px: 1}}. Refer button theme\n    else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = propsFlattener(\n      {\n        props: componentSizeProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap:\n          variantSpecificityMap || baseSpecificityMap || specificityMap,\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n  }\n\n  // // STEP 4: merge\n  const defaultStyles = merge(\n    {},\n    flattenBaseStyle,\n    flattenVariantStyle,\n    flattenSizeStyle\n  );\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge(\n    {},\n    specificityMap,\n    baseSpecificityMap,\n    variantSpecificityMap,\n    sizeSpecificityMap\n  );\n\n  flattenProps = propsSpreader(\n    { ...defaultStyles, ...flattenProps },\n    defaultSpecificity\n  );\n\n  // // STEP 5: linear Grad and contrastText\n  let ignore: any = [];\n  if (\n    flattenProps.bg?.linearGradient ||\n    flattenProps.background?.linearGradient ||\n    flattenProps.bgColor?.linearGradient ||\n    flattenProps.backgroundColor?.linearGradient\n  ) {\n    let bgProp = 'bg';\n    if (flattenProps.background?.linearGradient) {\n      bgProp = 'background';\n    } else if (flattenProps.bgColor?.linearGradient) {\n      bgProp = 'bgColor';\n    } else if (flattenProps.backgroundColor?.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n    flattenProps[bgProp].linearGradient.colors = flattenProps[\n      bgProp\n    ].linearGradient.colors.map((color: string) => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n  // // NOTE: seprating bg props when linearGardiant is available\n  const [gradientProps] = extractInObject(flattenProps, ignore);\n\n  const bgColor =\n    flattenProps.bg ?? flattenProps.backgroundColor ?? flattenProps.bgColor;\n\n  const contrastTextColor = useContrastText(\n    bgColor,\n    flattenProps?._text?.color\n  );\n\n  flattenProps._text =\n    contrastTextColor && flattenProps?._text?.color === undefined\n      ? {\n          color: contrastTextColor,\n          ...flattenProps._text,\n        }\n      : flattenProps._text;\n\n  const resolvedProps = omitUndefined({\n    ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps,\n  });\n  // STEP 6: Return\n\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n}\n"]},"metadata":{},"sourceType":"script"}