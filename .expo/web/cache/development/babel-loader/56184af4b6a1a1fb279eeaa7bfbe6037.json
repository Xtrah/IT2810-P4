{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.strictModeLogger = void 0;\nvar tokenNotString = 'tokenNotString';\nvar tokenNotFound = 'tokenNotFound';\n\nvar strictModeLogger = function strictModeLogger(_ref) {\n  var token = _ref.token,\n      scale = _ref.scale,\n      mode = _ref.mode,\n      type = _ref.type;\n\n  if (!mode) {\n    mode = 'off';\n  }\n\n  if (mode === 'off') return;\n  var log = console[mode];\n\n  switch (type) {\n    case tokenNotFound:\n      log(\"Token \" + token + \" not found in theme scale of \" + scale + \". Please use extendTheme function to add this token in your theme\");\n      return;\n\n    case tokenNotString:\n      log(\"Token \" + token + \" should be passed as a string.\");\n      return;\n\n    default:\n      return;\n  }\n};\n\nexports.strictModeLogger = strictModeLogger;","map":{"version":3,"sources":["StrictMode.ts"],"names":["tokenNotString","tokenNotFound","strictModeLogger","token","scale","mode","type","log","console"],"mappings":";;;;AAEA,IAAMA,cAAc,GAApB,gBAAA;AACA,IAAMC,aAAa,GAAnB,eAAA;;AAEO,IAAMC,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,IAAnBA,EAUP;AATJC,MAAAA,KASI,GAAA,IAAA,CATJA,KAAAA;AAAAA,MACAC,KAQI,GAAA,IAAA,CARJA,KADAD;AAAAA,MAEAE,IAOI,GAAA,IAAA,CAPJA,IAFAF;AAAAA,MAGAG,IAMI,GAAA,IAAA,CANJA,IAHAH;;AAUA,MAAI,CAAJ,IAAA,EAAW;AACTE,IAAAA,IAAI,GAAJA,KAAAA;AAGF;;AAAA,MAAIA,IAAI,KAAR,KAAA,EAAoB;AAGpB,MAAME,GAAG,GAAGC,OAAO,CAAnB,IAAmB,CAAnB;;AAEA,UAAA,IAAA;AACE,SAAA,aAAA;AACED,MAAAA,GAAG,CAAA,WAAA,KAAA,GAAA,+BAAA,GAAA,KAAA,GAAHA,mEAAG,CAAHA;AAGA;;AACF,SAAA,cAAA;AACEA,MAAAA,GAAG,CAAA,WAAA,KAAA,GAAHA,gCAAG,CAAHA;AACA;;AACF;AATF;AAAA;AApBK,CAAA","sourcesContent":["export type IModeType = 'off' | 'warn' | 'error';\n\nconst tokenNotString = 'tokenNotString';\nconst tokenNotFound = 'tokenNotFound';\n\nexport const strictModeLogger = ({\n  token,\n  scale,\n  mode,\n  type,\n}: {\n  token: string;\n  scale: string;\n  mode: IModeType;\n  type: typeof tokenNotString | typeof tokenNotFound;\n}) => {\n  if (!mode) {\n    mode = 'off';\n  }\n\n  if (mode === 'off') return;\n\n  // eslint-disable-next-line no-console\n  const log = console[mode];\n\n  switch (type) {\n    case tokenNotFound:\n      log(\n        `Token ${token} not found in theme scale of ${scale}. Please use extendTheme function to add this token in your theme`\n      );\n      return;\n    case tokenNotString:\n      log(`Token ${token} should be passed as a string.`);\n      return;\n    default:\n      return;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}