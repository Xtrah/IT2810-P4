{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Pressable = require(\"../../primitives/Pressable\");\n\nvar _MenuContext = require(\"./MenuContext\");\n\nvar _useMenu = require(\"./useMenu\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Menu/MenuItem.tsx\";\n\nvar MenuItem = function MenuItem(_ref, ref) {\n  var children = _ref.children,\n      isDisabled = _ref.isDisabled,\n      _onPress = _ref.onPress,\n      style = _ref.style,\n      textValue = _ref.textValue,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"isDisabled\", \"onPress\", \"style\", \"textValue\"]);\n\n  var _React$useContext = _react.default.useContext(_MenuContext.MenuContext),\n      closeOnSelect = _React$useContext.closeOnSelect,\n      onClose = _React$useContext.onClose;\n\n  var menuItemRef = _react.default.useRef(null);\n\n  var mergedRef = (0, _utils.mergeRefs)([menuItemRef, ref]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('MenuItem', props, {\n    isDisabled: isDisabled\n  }),\n      _text = _usePropsResolution._text,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"_text\"]);\n\n  var _React$useState = _react.default.useState(''),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      textContent = _React$useState2[0],\n      setTextContent = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    var menuItem = menuItemRef.current;\n\n    if (menuItem) {\n      var _menuItem$textContent;\n\n      setTextContent(((_menuItem$textContent = menuItem.textContent) != null ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n\n  var menuItemProps = (0, _useMenu.useMenuItem)({\n    textValue: textValue != null ? textValue : textContent,\n    ref: menuItemRef\n  });\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({}, menuItemProps, resolvedProps, {\n    ref: mergedRef,\n    style: style,\n    disabled: isDisabled,\n    accessibilityState: {\n      disabled: isDisabled\n    },\n    onPress: function onPress(e) {\n      if (!isDisabled) {\n        _onPress && _onPress(e);\n\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_react.default.Fragment, null, _react.default.Children.map(children, function (child, index) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return _react.default.createElement(_Text.default, (0, _extends2.default)({}, _text, {\n        key: \"menu-item-\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }), child);\n    } else {\n      return child;\n    }\n  })));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(MenuItem));\n\nexports.default = _default;","map":{"version":3,"sources":["MenuItem.tsx"],"names":["MenuItem","children","isDisabled","onPress","style","textValue","props","closeOnSelect","onClose","React","MenuContext","menuItemRef","mergedRef","_text","resolvedProps","textContent","setTextContent","menuItem","menuItemProps","ref","disabled"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItem = (\n  { children, isDisabled, onPress, style, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const { _text, ...resolvedProps } = usePropsResolution('MenuItem', props, {\n    isDisabled,\n  });\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      {...menuItemProps}\n      {...resolvedProps}\n      ref={mergedRef}\n      style={style}\n      disabled={isDisabled}\n      // TouchableHighlight doesn't announce disabled, even if disabled prop is set\n      accessibilityState={{\n        disabled: isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string' || typeof child === 'number') {\n            return (\n              <Text {..._text} key={`menu-item-${index}`}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"]},"metadata":{},"sourceType":"script"}