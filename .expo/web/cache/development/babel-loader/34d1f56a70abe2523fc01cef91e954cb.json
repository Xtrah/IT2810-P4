{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyleAndFilteredProps = exports.typography = exports.space = exports.background = exports.border = exports.color = exports.position = exports.flexbox = exports.layout = exports.getColor = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends5 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.has\"));\n\nvar _utils = require(\"../hooks/useThemeProps/utils\");\n\nvar _tools = require(\"./tools\");\n\nvar _StrictMode = require(\"../core/StrictMode\");\n\nvar isNumber = function isNumber(n) {\n  return typeof n === 'number' && !isNaN(n);\n};\n\nvar getColor = function getColor(rawValue, scale, theme) {\n  var alphaMatched = typeof rawValue === 'string' ? rawValue == null ? void 0 : rawValue.match(/:alpha\\.\\d\\d?\\d?/) : false;\n\n  if (alphaMatched) {\n    var colorMatched = rawValue == null ? void 0 : rawValue.match(/^.*?(?=:alpha)/);\n\n    var _color = colorMatched ? colorMatched[0] : colorMatched;\n\n    var alphaValue = alphaMatched[0].split('.')[1];\n    var alphaFromToken = (0, _lodash.default)(theme.opacity, alphaValue, alphaValue);\n    var alpha = alphaFromToken ? parseFloat(alphaFromToken) : 1;\n    var newColor = (0, _tools.transparentize)(_color, alpha)(theme);\n    return newColor;\n  } else {\n    return (0, _lodash.default)(scale, rawValue, rawValue);\n  }\n};\n\nexports.getColor = getColor;\n\nvar getMargin = function getMargin(n, scale) {\n  n = convertStringNumberToNumber('margin', n);\n\n  if (!isNumber(n)) {\n    return (0, _lodash.default)(scale, n, n);\n  }\n\n  var isNegative = n < 0;\n  var absolute = Math.abs(n);\n  var value = (0, _lodash.default)(scale, absolute, absolute);\n\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n\n  return value * (isNegative ? -1 : 1);\n};\n\nvar layout = {\n  width: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  w: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true\n};\nexports.layout = layout;\nvar flexbox = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flexDir: {\n    property: 'flexDirection'\n  },\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true\n};\nexports.flexbox = flexbox;\nvar position = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n    scale: 'zIndices'\n  },\n  top: {\n    property: 'top',\n    scale: 'space'\n  },\n  right: {\n    property: 'right',\n    scale: 'space'\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space'\n  },\n  left: {\n    property: 'left',\n    scale: 'space'\n  }\n};\nexports.position = position;\nvar color = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n    transformer: getColor\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  opacity: {\n    property: 'opacity',\n    scale: 'opacity'\n  },\n  bg: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  bgColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  background: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor\n  }\n};\nexports.color = color;\nvar border = {\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths'\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles'\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders'\n  },\n  borderTopRadius: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii'\n  },\n  borderLeftRadius: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii'\n  },\n  borderRightRadius: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders'\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders'\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders'\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders'\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders'\n  },\n  borderTopWidth: {\n    property: 'borderTopWidth',\n    scale: 'borderWidths'\n  },\n  borderTopColor: {\n    property: 'borderTopColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderTopStyle: {\n    property: 'borderTopStyle',\n    scale: 'borderStyles'\n  },\n  borderBottomWidth: {\n    property: 'borderBottomWidth',\n    scale: 'borderWidths'\n  },\n  borderBottomColor: {\n    property: 'borderBottomColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderBottomStyle: {\n    property: 'borderBottomStyle',\n    scale: 'borderStyles'\n  },\n  borderLeftWidth: {\n    property: 'borderLeftWidth',\n    scale: 'borderWidths'\n  },\n  borderLeftColor: {\n    property: 'borderLeftColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderLeftStyle: {\n    property: 'borderLeftStyle',\n    scale: 'borderStyles'\n  },\n  borderRightWidth: {\n    property: 'borderRightWidth',\n    scale: 'borderWidths'\n  },\n  borderRightColor: {\n    property: 'borderRightColor',\n    scale: 'colors',\n    transformer: getColor\n  },\n  borderRightStyle: {\n    property: 'borderRightStyle',\n    scale: 'borderStyles'\n  },\n  rounded: {\n    property: 'borderRadius',\n    scale: 'radii'\n  },\n  roundedTopLeft: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii'\n  },\n  roundedTopRight: {\n    property: 'borderTopRightRadius',\n    scale: 'radii'\n  },\n  roundedBottomLeft: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii'\n  },\n  roundedBottomRight: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii'\n  },\n  roundedTop: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii'\n  },\n  borderBottomRadius: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  roundedBottom: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  },\n  roundedLeft: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii'\n  },\n  roundedRight: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii'\n  }\n};\nexports.border = border;\nvar background = {\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: {\n    property: 'backgroundImage'\n  },\n  bgImg: {\n    property: 'backgroundImage'\n  },\n  bgBlendMode: {\n    property: 'backgroundBlendMode'\n  },\n  bgSize: {\n    property: 'backgroundSize'\n  },\n  bgPosition: {\n    property: 'backgroundPosition'\n  },\n  bgPos: {\n    property: 'backgroundPosition'\n  },\n  bgRepeat: {\n    property: 'backgroundRepeat'\n  },\n  bgAttachment: {\n    property: 'backgroundAttachment'\n  }\n};\nexports.background = background;\nvar space = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin\n  },\n  m: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mt: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mr: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin\n  },\n  mb: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin\n  },\n  ml: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  mx: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  my: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin\n  },\n  padding: {\n    property: 'padding',\n    scale: 'space'\n  },\n  p: {\n    property: 'padding',\n    scale: 'space'\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space'\n  },\n  pt: {\n    property: 'paddingTop',\n    scale: 'space'\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space'\n  },\n  pr: {\n    property: 'paddingRight',\n    scale: 'space'\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space'\n  },\n  pb: {\n    property: 'paddingBottom',\n    scale: 'space'\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space'\n  },\n  pl: {\n    property: 'paddingLeft',\n    scale: 'space'\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space'\n  },\n  px: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space'\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space'\n  },\n  py: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space'\n  }\n};\nexports.space = space;\nvar typography = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts'\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes'\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n    transformer: function transformer(val, scale) {\n      return val ? (0, _lodash.default)(scale, val, val).toString() : val;\n    }\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights'\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings'\n  },\n  textAlign: true,\n  fontStyle: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  textDecoration: {\n    property: 'textDecorationLine'\n  },\n  txtDecor: {\n    property: 'textDecorationLine'\n  },\n  textDecorationLine: true\n};\nexports.typography = typography;\nvar extraProps = {\n  outline: true,\n  outlineWidth: true,\n  shadow: {\n    scale: 'shadows'\n  },\n  cursor: true,\n  overflow: true\n};\nvar propConfig = (0, _extends5.default)({}, color, space, layout, flexbox, border, position, typography, background, extraProps);\n\nvar convertStringNumberToNumber = function convertStringNumberToNumber(key, value) {\n  if (typeof value === 'string' && key !== 'fontWeight' && value && !isNaN(Number(value))) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nvar getStyleAndFilteredProps = function getStyleAndFilteredProps(_ref) {\n  var style = _ref.style,\n      theme = _ref.theme,\n      debug = _ref.debug,\n      currentBreakpoint = _ref.currentBreakpoint,\n      strictMode = _ref.strictMode,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"style\", \"theme\", \"debug\", \"currentBreakpoint\", \"strictMode\"]);\n  var styleFromProps = {};\n  var restProps = {};\n\n  for (var key in props) {\n    var rawValue = props[key];\n\n    if (key in propConfig) {\n      var value = (0, _utils.resolveValueWithBreakpoint)(rawValue, theme.breakpoints, currentBreakpoint, key);\n      var config = propConfig[key];\n\n      if (config === true) {\n        styleFromProps = (0, _extends5.default)({}, styleFromProps, (0, _defineProperty2.default)({}, key, convertStringNumberToNumber(key, value)));\n      } else if (config) {\n        (function () {\n          var property = config.property,\n              scale = config.scale,\n              properties = config.properties,\n              transformer = config.transformer;\n          var val = value;\n          var strictModeProps = {\n            token: value,\n            scale: scale,\n            mode: strictMode,\n            type: 'tokenNotFound'\n          };\n\n          if (transformer) {\n            val = transformer(val, theme[scale], theme, props.fontSize, strictModeProps);\n          } else {\n            if (!(0, _lodash2.default)(theme[scale], value) && typeof value !== 'undefined') {\n              (0, _StrictMode.strictModeLogger)(strictModeProps);\n            }\n\n            val = (0, _lodash.default)(theme[scale], value, value);\n          }\n\n          if (typeof val === 'string') {\n            if (val.endsWith('px')) {\n              val = parseFloat(val);\n            } else if (val.endsWith('em') && _reactNative.Platform.OS !== 'web') {\n              var fontSize = (0, _utils.resolveValueWithBreakpoint)(props.fontSize, theme.breakpoints, currentBreakpoint, key);\n              val = parseFloat(val) * parseFloat((0, _lodash.default)(theme.fontSizes, fontSize, fontSize));\n            }\n          }\n\n          if (typeof value !== 'string' && typeof value !== 'undefined') {\n            (0, _StrictMode.strictModeLogger)((0, _extends5.default)({}, strictModeProps, {\n              type: 'tokenNotString'\n            }));\n          }\n\n          val = convertStringNumberToNumber(key, val);\n\n          if (properties) {\n            properties.forEach(function (property) {\n              styleFromProps = (0, _extends5.default)({}, styleFromProps, (0, _defineProperty2.default)({}, property, val));\n            });\n          } else if (property) {\n            styleFromProps = (0, _extends5.default)({}, styleFromProps, (0, _defineProperty2.default)({}, property, val));\n          } else {\n            styleFromProps = (0, _extends5.default)({}, styleFromProps, val);\n          }\n        })();\n      }\n    } else {\n      restProps[key] = rawValue;\n    }\n  }\n\n  if (debug) {\n    console.log('style ', debug + ' :: ', styleFromProps, style, props);\n  }\n\n  return {\n    styleSheet: _reactNative.StyleSheet.create({\n      box: styleFromProps\n    }),\n    restProps: restProps\n  };\n};\n\nexports.getStyleAndFilteredProps = getStyleAndFilteredProps;","map":{"version":3,"sources":["styled-system.ts"],"names":["isNumber","isNaN","getColor","alphaMatched","rawValue","colorMatched","color","alphaValue","alphaFromToken","theme","alpha","parseFloat","newColor","getMargin","n","convertStringNumberToNumber","isNegative","absolute","Math","value","layout","width","property","scale","w","height","h","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","size","properties","boxSize","overflow","overflowX","overflowY","display","verticalAlign","flexbox","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flexDir","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","position","zIndex","top","right","bottom","left","transformer","backgroundColor","opacity","bg","bgColor","background","border","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderTopRadius","borderLeftRadius","borderRightRadius","borderTopLeftRadius","borderTopRightRadius","borderRight","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderX","borderY","borderTopWidth","borderTopColor","borderTopStyle","borderBottomWidth","borderBottomColor","borderBottomStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","rounded","roundedTopLeft","roundedTopRight","roundedBottomLeft","roundedBottomRight","roundedTop","borderBottomRadius","roundedBottom","roundedLeft","roundedRight","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundBlendMode","bgImage","bgImg","bgBlendMode","bgSize","bgPosition","bgPos","bgRepeat","bgAttachment","space","margin","m","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","marginX","mx","marginY","my","padding","p","paddingTop","pt","paddingRight","pr","paddingBottom","pb","paddingLeft","pl","paddingX","px","paddingY","py","typography","fontFamily","fontSize","fontWeight","val","lineHeight","letterSpacing","textAlign","fontStyle","wordBreak","overflowWrap","textOverflow","textTransform","whiteSpace","textDecoration","txtDecor","textDecorationLine","extraProps","outline","outlineWidth","shadow","cursor","propConfig","key","Number","getStyleAndFilteredProps","style","debug","currentBreakpoint","strictMode","props","styleFromProps","restProps","config","strictModeProps","token","mode","type","Platform","console","styleSheet","StyleSheet","box"],"mappings":"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","sourcesContent":["import { Platform, StyleSheet } from 'react-native';\nimport get from 'lodash.get';\nimport has from 'lodash.has';\nimport { resolveValueWithBreakpoint } from '../hooks/useThemeProps/utils';\nimport { transparentize } from './tools';\nimport { strictModeLogger } from '../core/StrictMode';\n\nconst isNumber = (n: any) => typeof n === 'number' && !isNaN(n);\n\nexport const getColor = (rawValue: any, scale: any, theme: any) => {\n  const alphaMatched =\n    typeof rawValue === 'string' ? rawValue?.match(/:alpha\\.\\d\\d?\\d?/) : false;\n\n  if (alphaMatched) {\n    const colorMatched = rawValue?.match(/^.*?(?=:alpha)/);\n    const color = colorMatched ? colorMatched[0] : colorMatched;\n    const alphaValue = alphaMatched[0].split('.')[1];\n    const alphaFromToken = get(theme.opacity, alphaValue, alphaValue);\n    const alpha = alphaFromToken ? parseFloat(alphaFromToken) : 1;\n    const newColor = transparentize(color, alpha)(theme);\n    return newColor;\n  } else {\n    return get(scale, rawValue, rawValue);\n  }\n};\n\n// To handle negative margins\nconst getMargin = (n: any, scale: any) => {\n  n = convertStringNumberToNumber('margin', n);\n  if (!isNumber(n)) {\n    return get(scale, n, n);\n  }\n\n  const isNegative = n < 0;\n  const absolute = Math.abs(n);\n  const value = get(scale, absolute, absolute);\n  if (!isNumber(value)) {\n    return isNegative ? '-' + value : value;\n  }\n  return value * (isNegative ? -1 : 1);\n};\n\nexport const layout = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  w: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n} as const;\n\nexport const flexbox = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flexDir: {\n    property: 'flexDirection',\n  },\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n} as const;\n\nexport const position = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n    scale: 'zIndices',\n  },\n  top: {\n    property: 'top',\n    scale: 'space',\n  },\n  right: {\n    property: 'right',\n    scale: 'space',\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space',\n  },\n  left: {\n    property: 'left',\n    scale: 'space',\n  },\n} as const;\n\nexport const color = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  opacity: {\n    property: 'opacity',\n    scale: 'opacity',\n  },\n  bg: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  bgColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  background: {\n    property: 'backgroundColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n} as const;\n\nexport const border = {\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths',\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles',\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders',\n  },\n  borderTopRadius: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii',\n  },\n  borderLeftRadius: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii',\n  },\n  borderRightRadius: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders',\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders',\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders',\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders',\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders',\n  },\n  borderTopWidth: {\n    property: 'borderTopWidth',\n    scale: 'borderWidths',\n  },\n  borderTopColor: {\n    property: 'borderTopColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderTopStyle: {\n    property: 'borderTopStyle',\n    scale: 'borderStyles',\n  },\n  borderBottomWidth: {\n    property: 'borderBottomWidth',\n    scale: 'borderWidths',\n  },\n  borderBottomColor: {\n    property: 'borderBottomColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderBottomStyle: {\n    property: 'borderBottomStyle',\n    scale: 'borderStyles',\n  },\n  borderLeftWidth: {\n    property: 'borderLeftWidth',\n    scale: 'borderWidths',\n  },\n  borderLeftColor: {\n    property: 'borderLeftColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderLeftStyle: {\n    property: 'borderLeftStyle',\n    scale: 'borderStyles',\n  },\n  borderRightWidth: {\n    property: 'borderRightWidth',\n    scale: 'borderWidths',\n  },\n  borderRightColor: {\n    property: 'borderRightColor',\n    scale: 'colors',\n    transformer: getColor,\n  },\n  borderRightStyle: {\n    property: 'borderRightStyle',\n    scale: 'borderStyles',\n  },\n  rounded: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n\n  roundedTopLeft: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n\n  roundedTopRight: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n\n  roundedBottomLeft: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n\n  roundedBottomRight: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n\n  roundedTop: {\n    properties: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    scale: 'radii',\n  },\n  borderBottomRadius: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n  roundedBottom: {\n    properties: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n\n  roundedLeft: {\n    properties: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    scale: 'radii',\n  },\n\n  roundedRight: {\n    properties: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    scale: 'radii',\n  },\n} as const;\n\nexport const background = {\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n  backgroundAttachment: true,\n  backgroundBlendMode: true,\n  bgImage: {\n    property: 'backgroundImage',\n  },\n  bgImg: {\n    property: 'backgroundImage',\n  },\n  bgBlendMode: {\n    property: 'backgroundBlendMode',\n  },\n  bgSize: {\n    property: 'backgroundSize',\n  },\n  bgPosition: {\n    property: 'backgroundPosition',\n  },\n  bgPos: {\n    property: 'backgroundPosition',\n  },\n  bgRepeat: {\n    property: 'backgroundRepeat',\n  },\n  bgAttachment: {\n    property: 'backgroundAttachment',\n  },\n} as const;\n\nexport const space = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  m: {\n    property: 'margin',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mt: {\n    property: 'marginTop',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mr: {\n    property: 'marginRight',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mb: {\n    property: 'marginBottom',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  ml: {\n    property: 'marginLeft',\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  mx: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n  my: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transformer: getMargin,\n  },\n\n  padding: {\n    property: 'padding',\n    scale: 'space',\n  },\n  p: {\n    property: 'padding',\n    scale: 'space',\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space',\n  },\n  pt: {\n    property: 'paddingTop',\n    scale: 'space',\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space',\n  },\n  pr: {\n    property: 'paddingRight',\n    scale: 'space',\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space',\n  },\n  pb: {\n    property: 'paddingBottom',\n    scale: 'space',\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space',\n  },\n  pl: {\n    property: 'paddingLeft',\n    scale: 'space',\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n  },\n  px: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n  },\n  py: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n  },\n} as const;\n\nexport const typography = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts',\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes',\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n    transformer: (val: any, scale: any) => {\n      return val ? get(scale, val, val).toString() : val;\n    },\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights',\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings',\n  },\n  textAlign: true,\n  fontStyle: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  textDecoration: { property: 'textDecorationLine' },\n  txtDecor: { property: 'textDecorationLine' },\n  textDecorationLine: true,\n} as const;\n\nconst extraProps = {\n  outline: true,\n  outlineWidth: true,\n  shadow: {\n    scale: 'shadows',\n  },\n  cursor: true,\n  overflow: true,\n} as const;\n\nconst propConfig = {\n  ...color,\n  ...space,\n  ...layout,\n  ...flexbox,\n  ...border,\n  ...position,\n  ...typography,\n  ...background,\n  ...extraProps,\n} as const;\n\n// For backward compatibility with 3.0 of props like non token string numbers `<Box mt={\"39\"} />` => used to get applied as 39px. RN expects fontWeight to be string and crashes with numbers\n// https://reactnative.dev/docs/text-style-props#fontweight\nconst convertStringNumberToNumber = (key: string, value: string) => {\n  if (\n    typeof value === 'string' &&\n    key !== 'fontWeight' &&\n    value &&\n    !isNaN(Number(value))\n  ) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nexport const getStyleAndFilteredProps = ({\n  style,\n  theme,\n  debug,\n  currentBreakpoint,\n  strictMode,\n  ...props\n}: any) => {\n  let styleFromProps: any = {};\n  const restProps: any = {};\n  for (const key in props) {\n    const rawValue = props[key];\n\n    if (key in propConfig) {\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n\n      const config = propConfig[key as keyof typeof propConfig];\n\n      if (config === true) {\n        styleFromProps = {\n          ...styleFromProps,\n          [key]: convertStringNumberToNumber(key, value),\n        };\n      } else if (config) {\n        //@ts-ignore\n        const { property, scale, properties, transformer } = config;\n        let val = value;\n        const strictModeProps = {\n          token: value,\n          scale,\n          mode: strictMode,\n          type: 'tokenNotFound' as any,\n        };\n\n        if (transformer) {\n          val = transformer(\n            val,\n            theme[scale],\n            theme,\n            props.fontSize,\n            strictModeProps\n          );\n        } else {\n          // If a token is not found in the theme\n          if (!has(theme[scale], value) && typeof value !== 'undefined') {\n            strictModeLogger(strictModeProps);\n          }\n\n          val = get(theme[scale], value, value);\n        }\n\n        if (typeof val === 'string') {\n          if (val.endsWith('px')) {\n            val = parseFloat(val);\n          } else if (val.endsWith('em') && Platform.OS !== 'web') {\n            const fontSize = resolveValueWithBreakpoint(\n              props.fontSize,\n              theme.breakpoints,\n              currentBreakpoint,\n              key\n            );\n            val =\n              parseFloat(val) *\n              parseFloat(get(theme.fontSizes, fontSize, fontSize));\n          }\n        }\n\n        if (typeof value !== 'string' && typeof value !== 'undefined') {\n          strictModeLogger({\n            ...strictModeProps,\n            type: 'tokenNotString',\n          });\n        }\n\n        val = convertStringNumberToNumber(key, val);\n\n        if (properties) {\n          //@ts-ignore\n          properties.forEach((property) => {\n            styleFromProps = {\n              ...styleFromProps,\n              [property]: val,\n            };\n          });\n        } else if (property) {\n          styleFromProps = {\n            ...styleFromProps,\n            [property]: val,\n          };\n        } else {\n          styleFromProps = {\n            ...styleFromProps,\n            ...val,\n          };\n        }\n      }\n    } else {\n      restProps[key] = rawValue;\n    }\n  }\n\n  if (debug) {\n    /* eslint-disable-next-line */\n    console.log('style ', debug + ' :: ', styleFromProps, style, props);\n  }\n\n  return {\n    styleSheet: StyleSheet.create({ box: styleFromProps }),\n    restProps,\n  };\n};\n\nexport type StyledPropConfig = typeof propConfig;\n"]},"metadata":{},"sourceType":"script"}