{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../Text\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _useLink2 = require(\"./useLink\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _Pressable = require(\"../Pressable\");\n\nvar _interactions = require(\"@react-native-aria/interactions\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Link/index.tsx\";\n\nvar Link = function Link(props, ref) {\n  var _ref = _react.default.useRef(null);\n\n  var _useHover = (0, _interactions.useHover)({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('Link', props, {\n    isHovered: isHovered\n  }),\n      isUnderlined = _usePropsResolution.isUnderlined,\n      children = _usePropsResolution.children,\n      _text = _usePropsResolution._text,\n      href = _usePropsResolution.href,\n      onPress = _usePropsResolution.onPress,\n      isExternal = _usePropsResolution.isExternal,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"isUnderlined\", \"children\", \"_text\", \"href\", \"onPress\", \"isExternal\"]);\n\n  var _useLink = (0, _useLink2.useLink)({\n    href: href,\n    onPress: onPress,\n    isExternal: isExternal,\n    _ref: _ref\n  }),\n      linkProps = _useLink.linkProps;\n\n  var linkTextProps = (0, _extends2.default)({\n    textDecorationLine: isUnderlined ? 'underline' : 'none'\n  }, _text);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react.default.createElement(_react.default.Fragment, null, _reactNative.Platform.OS === 'web' ? _react.default.createElement(_Box.default, (0, _extends2.default)({}, linkProps, resolvedProps, {\n    _text: linkTextProps,\n    ref: (0, _utils.mergeRefs)([ref, _ref]),\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), children) : _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({}, linkProps, resolvedProps, {\n    ref: ref,\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), _react.default.Children.map(children, function (child) {\n    return typeof child === 'string' || typeof child === 'number' ? _react.default.createElement(_Text.default, (0, _extends2.default)({}, resolvedProps._text, linkTextProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), child) : child;\n  })));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Link));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["Link","_ref","React","isHovered","isUnderlined","children","_text","href","onPress","isExternal","resolvedProps","linkProps","linkTextProps","textDecorationLine","Platform"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks';\nimport { useLink } from './useLink';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Link = (props: ILinkProps, ref: any) => {\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const {\n    isUnderlined,\n    children,\n    _text,\n    href,\n    onPress,\n    isExternal,\n    ...resolvedProps\n  } = usePropsResolution('Link', props, { isHovered });\n  const { linkProps } = useLink({ href, onPress, isExternal, _ref });\n\n  const linkTextProps = {\n    textDecorationLine: isUnderlined ? 'underline' : 'none',\n    ..._text,\n  };\n  // function getHoverProps() {\n  //   let hoverTextProps = {\n  //     ...linkTextProps,\n  //     ..._hover?._text,\n  //   };\n  //   return {\n  //     ...hoverTextProps,\n  //   };\n  // }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {/* On web we render Link in anchor tag */}\n      {Platform.OS === 'web' ? (\n        <Box\n          {...linkProps}\n          {...resolvedProps}\n          _text={linkTextProps}\n          ref={mergeRefs([ref, _ref])}\n          flexDirection=\"row\"\n        >\n          {children}\n        </Box>\n      ) : (\n        <Pressable\n          {...linkProps}\n          {...resolvedProps}\n          ref={ref}\n          flexDirection=\"row\"\n        >\n          {React.Children.map(children, (child) =>\n            typeof child === 'string' || typeof child === 'number' ? (\n              <Text {...resolvedProps._text} {...linkTextProps}>\n                {child}\n              </Text>\n            ) : (\n              child\n            )\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n};\n\nexport default memo(forwardRef(Link));\nexport type { ILinkProps };\n"]},"metadata":{},"sourceType":"script"}