{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _toggle = require(\"@react-stately/toggle\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _styled = require(\"../../../utils/styled\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _interactions = require(\"@react-native-aria/interactions\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Switch/index.tsx\";\n\nvar StyledNBSwitch = (0, _styled.makeStyledComponent)(_reactNative.Switch);\n\nvar Switch = function Switch(_ref2, ref) {\n  var style = _ref2.style,\n      onToggle = _ref2.onToggle,\n      isDisabled = _ref2.isDisabled,\n      isInvalid = _ref2.isInvalid,\n      isChecked = _ref2.isChecked,\n      defaultIsChecked = _ref2.defaultIsChecked,\n      accessibilityLabel = _ref2.accessibilityLabel,\n      accessibilityHint = _ref2.accessibilityHint,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"style\", \"onToggle\", \"isDisabled\", \"isInvalid\", \"isChecked\", \"defaultIsChecked\", \"accessibilityLabel\", \"accessibilityHint\"]);\n  var state = (0, _toggle.useToggleState)({\n    defaultSelected: !(0, _lodash.default)(defaultIsChecked) ? defaultIsChecked : false\n  });\n  var borderColorInvalid = (0, _hooks.useToken)('colors', 'danger.600');\n  var checked = !(0, _lodash.default)(isChecked) ? isChecked : state.isSelected;\n  var inValidPropFactors = {\n    borderWidth: 1,\n    borderRadius: 16,\n    borderColor: borderColorInvalid\n  };\n\n  var _ref = _react.default.useRef(null);\n\n  var _useHover = (0, _interactions.useHover)({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Switch', props, {\n    isHovered: isHovered,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isChecked: checked\n  }),\n      _onTrackColor = _usePropsResolution.onTrackColor,\n      _offTrackColor = _usePropsResolution.offTrackColor,\n      _onThumbColor = _usePropsResolution.onThumbColor,\n      _offThumbColor = _usePropsResolution.offThumbColor,\n      themeStyle = _usePropsResolution.style,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"onTrackColor\", \"offTrackColor\", \"onThumbColor\", \"offThumbColor\", \"style\"]);\n\n  var computedStyle = _reactNative.StyleSheet.flatten([themeStyle, style, isInvalid ? inValidPropFactors : {}]);\n\n  var onTrackColor = (0, _hooks.useToken)('colors', _onTrackColor);\n  var offTrackColor = (0, _hooks.useToken)('colors', _offTrackColor);\n  var onThumbColor = (0, _hooks.useToken)('colors', _onThumbColor);\n  var offThumbColor = (0, _hooks.useToken)('colors', _offThumbColor);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)((0, _extends2.default)({}, props, {\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isChecked: isChecked,\n    defaultIsChecked: defaultIsChecked,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint\n  }))) {\n    return null;\n  }\n\n  return _react.default.createElement(StyledNBSwitch, (0, _extends2.default)({\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    trackColor: {\n      false: offTrackColor,\n      true: onTrackColor\n    },\n    thumbColor: checked ? onThumbColor : offThumbColor,\n    activeThumbColor: onThumbColor,\n    ios_backgroundColor: offTrackColor\n  }, resolvedProps, {\n    disabled: isDisabled,\n    onValueChange: onToggle ? onToggle : state.toggle,\n    value: checked,\n    style: computedStyle,\n    ref: (0, _utils.mergeRefs)([ref, _ref]),\n    opacity: isDisabled ? 0.4 : 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Switch));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledNBSwitch","RNSwitch","Switch","style","onToggle","isDisabled","isInvalid","isChecked","defaultIsChecked","accessibilityLabel","accessibilityHint","props","state","defaultSelected","borderColorInvalid","checked","inValidPropFactors","borderWidth","borderRadius","borderColor","_ref","React","isHovered","_onTrackColor","_offTrackColor","_onThumbColor","_offThumbColor","themeStyle","resolvedProps","computedStyle","StyleSheet","onTrackColor","offTrackColor","onThumbColor","offThumbColor","false","true"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { StyleSheet, ViewStyle, Switch as RNSwitch } from 'react-native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISwitchProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledNBSwitch = makeStyledComponent(RNSwitch);\n\n// TODO: Needs proper refactor\nconst Switch = (\n  {\n    style,\n    onToggle,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint,\n    ...props\n  }: ISwitchProps,\n  ref: any\n) => {\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false,\n  });\n\n  const borderColorInvalid = useToken('colors', 'danger.600');\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n  const inValidPropFactors = {\n    borderWidth: 1,\n    borderRadius: 16,\n    borderColor: borderColorInvalid,\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    style: themeStyle,\n    ...resolvedProps\n  } = usePropsResolution('Switch', props, {\n    isHovered,\n    isDisabled,\n    isInvalid,\n    isChecked: checked,\n  });\n\n  const computedStyle: ViewStyle = StyleSheet.flatten([\n    themeStyle,\n    style,\n    isInvalid ? inValidPropFactors : {},\n  ]);\n\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor);\n\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      defaultIsChecked,\n      accessibilityLabel,\n      accessibilityHint,\n    })\n  ) {\n    return null;\n  }\n  return (\n    <StyledNBSwitch\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      trackColor={{ false: offTrackColor, true: onTrackColor }}\n      thumbColor={checked ? onThumbColor : offThumbColor}\n      activeThumbColor={onThumbColor} // react-native-web prop for active thumbColor\n      ios_backgroundColor={offTrackColor}\n      {...resolvedProps}\n      disabled={isDisabled}\n      onValueChange={onToggle ? onToggle : state.toggle}\n      value={checked}\n      style={computedStyle}\n      ref={mergeRefs([ref, _ref])}\n      opacity={isDisabled ? 0.4 : 1}\n    />\n  );\n};\n\nexport default memo(forwardRef(Switch));\nexport type { ISwitchProps };\n"]},"metadata":{},"sourceType":"script"}