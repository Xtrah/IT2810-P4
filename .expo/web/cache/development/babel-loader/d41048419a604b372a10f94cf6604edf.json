{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Flex, HStack, Input, IconButton, Icon, ScrollView, Button, Center } from \"native-base\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_POKEMONS_LIMITED } from \"../utils/queries\";\nimport ScreenWrapper from \"../components/ScreenWrapper\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchFilter from \"../components/SearchFilter\";\nimport { pokemonFilterVar } from \"../cache\";\nvar ITEM_FETCH_LIMIT = 10;\nexport default function SearchScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(ITEM_FETCH_LIMIT),\n      _useState2 = _slicedToArray(_useState, 2),\n      offset = _useState2[0],\n      setOffset = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      onChangeSearchText = _useState4[1];\n\n  var _useLazyQuery = useLazyQuery(GET_POKEMONS_LIMITED, {\n    variables: {\n      name: searchText,\n      sortDescending: pokemonFilterVar().sortDescending,\n      type: pokemonFilterVar().type\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getQuery = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      data = _useLazyQuery2$.data,\n      loading = _useLazyQuery2$.loading,\n      error = _useLazyQuery2$.error,\n      fetchMore = _useLazyQuery2$.fetchMore;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      show = _React$useState2[0],\n      setShow = _React$useState2[1];\n\n  var handleToggle = function handleToggle() {\n    return setShow(!show);\n  };\n\n  useEffect(function () {\n    getQuery();\n  }, []);\n\n  var onLoadMore = function onLoadMore() {\n    if (fetchMore) {\n      fetchMore({\n        variables: {\n          name: searchText,\n          offset: offset\n        }\n      }).then(function () {\n        return setOffset(offset + ITEM_FETCH_LIMIT);\n      });\n    }\n  };\n\n  useEffect(function () {\n    setOffset(ITEM_FETCH_LIMIT);\n  }, [searchText]);\n\n  function onSubmit() {\n    getQuery({\n      variables: {\n        name: searchText,\n        sortDescending: pokemonFilterVar().sortDescending,\n        type: pokemonFilterVar().type\n      }\n    });\n  }\n\n  function navigateToCard(pokemonId) {\n    navigation.navigate(\"PokemonCardScreen\", {\n      pokemonId: pokemonId\n    });\n  }\n\n  return React.createElement(ScreenWrapper, null, React.createElement(ScrollView, null, React.createElement(Flex, {\n    alignItems: \"center\"\n  }, React.createElement(HStack, {\n    space: 2\n  }, React.createElement(Input, {\n    accessibilityLabel: \"Search for pokemon\",\n    fontSize: \"16\",\n    autoFocus: true,\n    width: \"100%\",\n    value: searchText,\n    type: \"text\",\n    placeholder: \"Enter pokemon name\",\n    onChangeText: onChangeSearchText\n  }), React.createElement(IconButton, {\n    onPress: onSubmit,\n    \"aria-label\": \"Search for pokemon\",\n    icon: React.createElement(Icon, {\n      as: MaterialIcons,\n      name: \"search\"\n    }),\n    _icon: {\n      color: \"red.500\",\n      size: \"md\"\n    },\n    _hover: {\n      bg: \"red.500:alpha.20\"\n    }\n  }), React.createElement(IconButton, {\n    onPress: handleToggle,\n    \"aria-label\": \"Open settings\",\n    icon: React.createElement(Icon, {\n      as: MaterialIcons,\n      name: \"settings\"\n    }),\n    _icon: {\n      color: \"red.500\",\n      size: \"md\"\n    },\n    _hover: {\n      bg: \"red.500:alpha.20\"\n    }\n  })), React.createElement(SearchFilter, {\n    show: show,\n    onSubmit: onSubmit\n  }), React.createElement(SearchResults, {\n    data: data,\n    navigateToCard: navigateToCard,\n    loading: loading,\n    error: error\n  }), React.createElement(Center, {\n    height: \"100px\"\n  }, React.createElement(Button, {\n    disabled: loading,\n    bgColor: \"red.500\",\n    color: \"white\",\n    h: \"1.75rem\",\n    size: \"md\",\n    onPress: onLoadMore\n  }, \"Load more\")))));\n}","map":{"version":3,"sources":["/Users/henrikvl/Documents/NTNU/WebDev/project4/screens/SearchScreen.tsx"],"names":["Flex","HStack","Input","IconButton","Icon","ScrollView","Button","Center","React","useEffect","useState","MaterialIcons","useLazyQuery","GET_POKEMONS_LIMITED","ScreenWrapper","SearchResults","SearchFilter","pokemonFilterVar","ITEM_FETCH_LIMIT","SearchScreen","navigation","offset","setOffset","searchText","onChangeSearchText","variables","name","sortDescending","type","getQuery","data","loading","error","fetchMore","show","setShow","handleToggle","onLoadMore","then","onSubmit","navigateToCard","pokemonId","navigate","color","size","bg"],"mappings":"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","sourcesContent":["import {\r\n  Flex,\r\n  HStack,\r\n  Input,\r\n  IconButton,\r\n  Icon,\r\n  ScrollView,\r\n  Button,\r\n  Center,\r\n} from \"native-base\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { GET_POKEMONS_LIMITED, GET_POKEMON_FILTER } from \"../utils/queries\";\r\nimport { RootStackScreenProps } from \"../types/navigation\";\r\nimport ScreenWrapper from \"../components/ScreenWrapper\";\r\nimport SearchResults from \"../components/SearchResults\";\r\nimport SearchFilter from \"../components/SearchFilter\";\r\nimport { pokemonFilterVar } from \"../cache\";\r\n\r\n// This value aligns with the hardcoded limit in backend\r\nconst ITEM_FETCH_LIMIT = 10;\r\n\r\n// This component contains search input and results\r\nexport default function SearchScreen({\r\n  navigation,\r\n}: RootStackScreenProps<\"Root\">) {\r\n  // Start first fetchmore with offset, to add to the already fetched items\r\n  const [offset, setOffset] = useState(ITEM_FETCH_LIMIT);\r\n  const [searchText, onChangeSearchText] = useState(\"\");\r\n\r\n  const [getQuery, { data, loading, error, fetchMore }] = useLazyQuery(\r\n    GET_POKEMONS_LIMITED,\r\n    {\r\n      variables: {\r\n        name: searchText,\r\n        sortDescending: pokemonFilterVar().sortDescending,\r\n        type: pokemonFilterVar().type,\r\n      },\r\n    }\r\n  );\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const handleToggle = () => setShow(!show);\r\n\r\n  // Query data from initial render\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n  // Query more items and update offset\r\n  const onLoadMore = () => {\r\n    if (fetchMore) {\r\n      fetchMore({\r\n        variables: {\r\n          name: searchText,\r\n          offset,\r\n        },\r\n      }).then(() => setOffset(offset + ITEM_FETCH_LIMIT));\r\n    }\r\n  };\r\n\r\n  // Reset offset when search text changes\r\n  useEffect(() => {\r\n    setOffset(ITEM_FETCH_LIMIT);\r\n  }, [searchText]);\r\n\r\n  // Query data when submitting\r\n  function onSubmit() {\r\n    getQuery({\r\n      variables: {\r\n        name: searchText,\r\n        sortDescending: pokemonFilterVar().sortDescending,\r\n        type: pokemonFilterVar().type,\r\n      },\r\n    });\r\n  }\r\n\r\n  // Sent to card for navigation\r\n  function navigateToCard(pokemonId: string) {\r\n    navigation.navigate(\"PokemonCardScreen\", {\r\n      pokemonId: pokemonId,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ScreenWrapper>\r\n      <ScrollView>\r\n        <Flex alignItems=\"center\">\r\n          <HStack space={2}>\r\n            <Input\r\n              accessibilityLabel=\"Search for pokemon\"\r\n              fontSize=\"16\"\r\n              autoFocus\r\n              width=\"100%\"\r\n              value={searchText}\r\n              type=\"text\"\r\n              placeholder=\"Enter pokemon name\"\r\n              onChangeText={onChangeSearchText}\r\n            />\r\n            <IconButton\r\n              onPress={onSubmit}\r\n              aria-label=\"Search for pokemon\"\r\n              icon={<Icon as={MaterialIcons} name=\"search\" />}\r\n              _icon={{\r\n                color: \"red.500\",\r\n                size: \"md\",\r\n              }}\r\n              _hover={{\r\n                bg: \"red.500:alpha.20\",\r\n              }}\r\n            />\r\n            <IconButton\r\n              onPress={handleToggle}\r\n              aria-label=\"Open settings\"\r\n              icon={<Icon as={MaterialIcons} name=\"settings\" />}\r\n              _icon={{\r\n                color: \"red.500\",\r\n                size: \"md\",\r\n              }}\r\n              _hover={{\r\n                bg: \"red.500:alpha.20\",\r\n              }}\r\n            />\r\n          </HStack>\r\n\r\n          <SearchFilter show={show} onSubmit={onSubmit} />\r\n\r\n          <SearchResults\r\n            data={data}\r\n            navigateToCard={navigateToCard}\r\n            loading={loading}\r\n            error={error}\r\n          />\r\n\r\n          <Center height=\"100px\">\r\n            <Button\r\n              disabled={loading}\r\n              bgColor=\"red.500\"\r\n              color=\"white\"\r\n              h=\"1.75rem\"\r\n              size=\"md\"\r\n              onPress={onLoadMore}\r\n            >\r\n              Load more\r\n            </Button>\r\n          </Center>\r\n        </Flex>\r\n      </ScrollView>\r\n    </ScreenWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}