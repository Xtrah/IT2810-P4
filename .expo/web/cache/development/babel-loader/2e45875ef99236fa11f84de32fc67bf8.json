{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Text = _interopRequireDefault(require(\"../Text\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _styled = require(\"../../../utils/styled\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Image/index.tsx\";\n\nvar StyledImage = (0, _styled.makeStyledComponent)(_reactNative.Image);\n\nvar Image = function Image(props, ref) {\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Image', props),\n      source = _usePropsResolution.source,\n      src = _usePropsResolution.src,\n      fallbackElement = _usePropsResolution.fallbackElement,\n      alt = _usePropsResolution.alt,\n      fallbackSource = _usePropsResolution.fallbackSource,\n      ignoreFallback = _usePropsResolution.ignoreFallback,\n      _alt = _usePropsResolution._alt,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"source\", \"src\", \"fallbackElement\", \"alt\", \"fallbackSource\", \"ignoreFallback\", \"_alt\"]);\n\n  var finalSource = (0, _react.useRef)(null);\n  var getSource = (0, _react.useCallback)(function () {\n    if (source) {\n      finalSource.current = source;\n    } else if (src) {\n      finalSource.current = {\n        uri: src\n      };\n    }\n\n    return finalSource.current;\n  }, [source, src]);\n\n  var _useState = (0, _react.useState)(getSource()),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      renderedSource = _useState2[0],\n      setSource = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      alternate = _useState4[0],\n      setAlternate = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(true),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      fallbackSourceFlag = _useState6[0],\n      setfallbackSourceFlag = _useState6[1];\n\n  _react.default.useEffect(function () {\n    return function () {\n      finalSource.current = null;\n    };\n  }, [source, src, getSource]);\n\n  var onImageLoadError = (0, _react.useCallback)(function (event) {\n    props.onError && props.onError(event);\n    console.warn(event.nativeEvent.error);\n\n    if (!ignoreFallback && fallbackSource && fallbackSource !== renderedSource && fallbackSourceFlag) {\n      setfallbackSourceFlag(false);\n      setSource(fallbackSource);\n    } else {\n      setAlternate(true);\n    }\n  }, [fallbackSource, fallbackSourceFlag, ignoreFallback, props, renderedSource]);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    if (fallbackElement) {\n      if (_react.default.isValidElement(fallbackElement)) {\n        return fallbackElement;\n      }\n    } else return _react.default.createElement(_Text.default, (0, _extends2.default)({}, _alt, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }), alt);\n  }\n\n  return _react.default.createElement(StyledImage, (0, _extends2.default)({\n    source: renderedSource,\n    accessibilityLabel: alt,\n    alt: alt\n  }, resolvedProps, {\n    onError: onImageLoadError,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Image));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledImage","RNImage","Image","source","src","fallbackElement","alt","fallbackSource","ignoreFallback","_alt","resolvedProps","finalSource","getSource","uri","renderedSource","setSource","alternate","setAlternate","fallbackSourceFlag","setfallbackSourceFlag","React","onImageLoadError","props","console","event"],"mappings":"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","sourcesContent":["import React, { useState, memo, forwardRef, useCallback, useRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\n\nconst StyledImage = makeStyledComponent(RNImage);\n\nconst Image = (props: IImageProps, ref: any) => {\n  const {\n    source,\n    src,\n    fallbackElement,\n    alt,\n    fallbackSource,\n    ignoreFallback,\n    _alt,\n    ...resolvedProps\n  } = usePropsResolution('Image', props);\n\n  const finalSource: any = useRef(null);\n  const getSource = useCallback(() => {\n    if (source) {\n      finalSource.current = source;\n    } else if (src) {\n      finalSource.current = { uri: src };\n    }\n    return finalSource.current;\n  }, [source, src]);\n\n  const [renderedSource, setSource] = useState(getSource());\n  const [alternate, setAlternate] = useState(false);\n  const [fallbackSourceFlag, setfallbackSourceFlag] = useState(true);\n\n  React.useEffect(() => {\n    return () => {\n      finalSource.current = null;\n    };\n  }, [source, src, getSource]);\n\n  const onImageLoadError = useCallback(\n    (event: any) => {\n      props.onError && props.onError(event);\n      console.warn(event.nativeEvent.error);\n      if (\n        !ignoreFallback &&\n        fallbackSource &&\n        fallbackSource !== renderedSource &&\n        fallbackSourceFlag\n      ) {\n        setfallbackSourceFlag(false);\n        setSource(fallbackSource);\n      } else {\n        setAlternate(true);\n      }\n    },\n    [fallbackSource, fallbackSourceFlag, ignoreFallback, props, renderedSource]\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    if (fallbackElement) {\n      if (React.isValidElement(fallbackElement)) {\n        return fallbackElement;\n      }\n    } else return <Text {..._alt}>{alt}</Text>;\n  }\n  return (\n    <StyledImage\n      source={renderedSource}\n      accessibilityLabel={alt}\n      alt={alt}\n      {...resolvedProps}\n      onError={onImageLoadError}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Image));\nexport type { IImageProps };\n"]},"metadata":{},"sourceType":"script"}