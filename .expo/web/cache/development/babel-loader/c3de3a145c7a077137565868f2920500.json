{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useQuery } from \"@apollo/client\";\nimport { Box, Center, Collapse, Heading, HStack, Select, Text } from \"native-base\";\nimport React, { useState } from \"react\";\nimport pokemonTypes from \"../constants/pokemonTypes\";\nimport { GET_POKEMON_FILTER } from \"../utils/queries\";\n\nvar SearchFilter = function SearchFilter(_ref) {\n  var show = _ref.show;\n\n  var _useQuery = useQuery(GET_POKEMON_FILTER),\n      filterData = _useQuery.data;\n\n  var _useState = useState(filterData.pokemonFilter.sortDescending),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemonSort = _useState2[0],\n      setPokemonSort = _useState2[1];\n\n  return React.createElement(Collapse, {\n    isOpen: show\n  }, React.createElement(Heading, null, \"Default Collapse\"), React.createElement(Box, {\n    p: \"20px\",\n    mt: \"4\",\n    borderColor: \"red.500\",\n    rounded: \"md\",\n    shadow: \"md\"\n  }, React.createElement(HStack, null, React.createElement(Box, {\n    minW: \"125px\",\n    p: 4\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    fontSize: \"md\"\n  }, \"Filter types:\")), React.createElement(Center, null, React.createElement(Select, {\n    defaultValue: \"\",\n    placeholder: \"Choose type\",\n    onValueChange: function onValueChange(itemValue) {\n      return setPokemonSort(itemValue);\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Show all\",\n    value: \"\"\n  }), pokemonTypes.map(function (type) {\n    return React.createElement(Select.Item, {\n      label: type,\n      key: type,\n      value: type\n    }, type);\n  })))), React.createElement(HStack, null, React.createElement(Box, {\n    minW: \"125px\",\n    p: 4\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    fontSize: \"md\"\n  }, \"Sort names:\")), React.createElement(Center, null, React.createElement(Select, {\n    defaultValue: \"false\",\n    onValueChange: function onValueChange(itemValue) {\n      return setPokemonSort(itemValue);\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Ascending\",\n    value: \"false\"\n  }), React.createElement(Select.Item, {\n    label: \"Descending\",\n    value: \"true\"\n  }))))));\n};\n\nexport default SearchFilter;","map":{"version":3,"sources":["/Users/henrikvl/Documents/NTNU/WebDev/project4/components/SearchFilter.tsx"],"names":["useQuery","Box","Center","Collapse","Heading","HStack","Select","Text","React","useState","pokemonTypes","GET_POKEMON_FILTER","SearchFilter","show","filterData","data","pokemonFilter","sortDescending","pokemonSort","setPokemonSort","itemValue","map","type"],"mappings":";AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,MALF,EAOEC,MAPF,EAQEC,IARF,QASO,aATP;AAUA,OAAOC,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AACA,OAAOC,YAAP;AACA,SAASC,kBAAT;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;;AAExC,kBAA6Bb,QAAQ,CAACW,kBAAD,CAArC;AAAA,MAAcG,UAAd,aAAQC,IAAR;;AACA,kBAAsCN,QAAQ,CAC5CK,UAAU,CAACE,aAAX,CAAyBC,cADmB,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAaA,SACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEN;AAAlB,KACE,oBAAC,OAAD,2BADF,EAEE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAc,IAAA,EAAE,EAAC,GAAjB;AAAqB,IAAA,WAAW,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAC,IAAnD;AAAwD,IAAA,MAAM,EAAC;AAA/D,KACE,oBAAC,MAAD,QACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAkB,IAAA,CAAC,EAAE;AAArB,KACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,KAAjB;AAAuB,IAAA,QAAQ,EAAC;AAAhC,qBADF,CADF,EAOE,oBAAC,MAAD,QACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAC,EADf;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,aAAa,EAAE,uBAACO,SAAD;AAAA,aAAeD,cAAc,CAACC,SAAD,CAA7B;AAAA;AAHjB,KAKE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC;AAApC,IALF,EAMGV,YAAY,CAACW,GAAb,CAAiB,UAACC,IAAD;AAAA,WAChB,oBAAC,MAAD,CAAQ,IAAR;AAAa,MAAA,KAAK,EAAEA,IAApB;AAA0B,MAAA,GAAG,EAAEA,IAA/B;AAAqC,MAAA,KAAK,EAAEA;AAA5C,OACGA,IADH,CADgB;AAAA,GAAjB,CANH,CADF,CAPF,CADF,EAuBE,oBAAC,MAAD,QACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAkB,IAAA,CAAC,EAAE;AAArB,KACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,KAAjB;AAAuB,IAAA,QAAQ,EAAC;AAAhC,mBADF,CADF,EAOE,oBAAC,MAAD,QACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAC,OADf;AAEE,IAAA,aAAa,EAAE,uBAACF,SAAD;AAAA,aAAeD,cAAc,CAACC,SAAD,CAA7B;AAAA;AAFjB,KAIE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC;AAArC,IAJF,EAKE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,YAAnB;AAAgC,IAAA,KAAK,EAAC;AAAtC,IALF,CADF,CAPF,CAvBF,CAFF,CADF;AA8CD,CA9DD;;AAgEA,eAAeR,YAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport {\n  Box,\n  Center,\n  Collapse,\n  Heading,\n  HStack,\n  NativeBaseProvider,\n  Select,\n  Text,\n} from \"native-base\";\nimport React, { useState, ChangeEvent } from \"react\";\nimport pokemonTypes from \"../constants/pokemonTypes\";\nimport { GET_POKEMON_FILTER } from \"../utils/queries\";\n\ninterface Props {\n  show: boolean;\n}\n\nconst SearchFilter = ({ show }: Props) => {\n  // Get filter to initialize select value\n  const { data: filterData } = useQuery(GET_POKEMON_FILTER);\n  const [pokemonSort, setPokemonSort] = useState(\n    filterData.pokemonFilter.sortDescending\n  );\n\n  /* function handleSortChange(e: ChangeEvent<HTMLSelectElement>) {\n    const sortDescending = e.target.value === \"true\";\n    setPokemonSort(e.target.value);\n    setPokemonFilter({\n      type: pokemonFilterVar().type,\n      sortDescending,\n    });\n  } */\n\n  return (\n    <Collapse isOpen={show}>\n      <Heading>Default Collapse</Heading>\n      <Box p=\"20px\" mt=\"4\" borderColor=\"red.500\" rounded=\"md\" shadow=\"md\">\n        <HStack>\n          <Box minW=\"125px\" p={4}>\n            <Text fontWeight=\"500\" fontSize=\"md\">\n              Filter types:\n            </Text>\n          </Box>\n\n          <Center>\n            <Select\n              defaultValue=\"\"\n              placeholder=\"Choose type\"\n              onValueChange={(itemValue) => setPokemonSort(itemValue)}\n            >\n              <Select.Item label=\"Show all\" value=\"\" />\n              {pokemonTypes.map((type: string) => (\n                <Select.Item label={type} key={type} value={type}>\n                  {type}\n                </Select.Item>\n              ))}\n            </Select>\n          </Center>\n        </HStack>\n        <HStack>\n          <Box minW=\"125px\" p={4}>\n            <Text fontWeight=\"500\" fontSize=\"md\">\n              Sort names:\n            </Text>\n          </Box>\n\n          <Center>\n            <Select\n              defaultValue=\"false\"\n              onValueChange={(itemValue) => setPokemonSort(itemValue)}\n            >\n              <Select.Item label=\"Ascending\" value=\"false\" />\n              <Select.Item label=\"Descending\" value=\"true\" />\n            </Select>\n          </Center>\n        </HStack>\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default SearchFilter;\n"]},"metadata":{},"sourceType":"module"}