{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Stack = require(\"../../primitives/Stack\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _useFormControl = require(\"./useFormControl\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/FormControl/FormControlErrorMessage.tsx\";\n\nvar FormControlErrorMessage = function FormControlErrorMessage(props, ref) {\n  var formControlContext = (0, _useFormControl.useFormControlContext)();\n  var combinedProps = (0, _utils.combineContextAndProps)(formControlContext, props);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid\n  }),\n      leftIcon = _usePropsResolution.leftIcon,\n      rightIcon = _usePropsResolution.rightIcon,\n      children = _usePropsResolution.children,\n      _text = _usePropsResolution._text,\n      _stack = _usePropsResolution._stack,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"leftIcon\", \"rightIcon\", \"children\", \"_text\", \"_stack\"]);\n\n  var startIcon = resolvedProps.startIcon,\n      endIcon = resolvedProps.endIcon;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (endIcon && _react.default.isValidElement(endIcon)) {\n    endIcon = _react.default.Children.map(endIcon, function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        key: \"button-end-icon-\" + index\n      }, _text, child.props));\n    });\n  }\n\n  if (startIcon && _react.default.isValidElement(startIcon)) {\n    startIcon = _react.default.Children.map(startIcon, function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        key: \"button-start-icon-\" + index\n      }, _text, child.props));\n    });\n  }\n\n  _react.default.useEffect(function () {\n    resolvedProps == null ? void 0 : resolvedProps.setHasFeedbackText(true);\n    return function () {\n      resolvedProps == null ? void 0 : resolvedProps.setHasFeedbackText(false);\n    };\n  });\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return resolvedProps != null && resolvedProps.isInvalid ? _react.default.createElement(_Box.default, (0, _extends2.default)({\n    nativeID: resolvedProps == null ? void 0 : resolvedProps.helpTextId\n  }, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_Stack.HStack, (0, _extends2.default)({}, _stack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), startIcon, _react.default.createElement(_Box.default, {\n    _text: _text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, children), endIcon)) : null;\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(FormControlErrorMessage));\n\nexports.default = _default;","map":{"version":3,"sources":["FormControlErrorMessage.tsx"],"names":["FormControlErrorMessage","formControlContext","combinedProps","leftIcon","rightIcon","children","_text","_stack","resolvedProps","isDisabled","isReadOnly","isInvalid","startIcon","endIcon","React","key","child"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlErrorMessageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps } from '../../../utils';\n\nconst FormControlErrorMessage = (\n  props: IFormControlErrorMessageProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const {\n    leftIcon,\n    rightIcon,\n    children,\n    _text,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid,\n    // isRequired: combinedProps.isRequired,\n  });\n  let { startIcon, endIcon } = resolvedProps;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  React.useEffect(() => {\n    resolvedProps?.setHasFeedbackText(true);\n    return () => {\n      resolvedProps?.setHasFeedbackText(false);\n    };\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return resolvedProps?.isInvalid ? (\n    <Box nativeID={resolvedProps?.helpTextId} {...resolvedProps} ref={ref}>\n      <HStack {..._stack}>\n        {startIcon}\n        <Box _text={_text}>{children}</Box>\n        {endIcon}\n      </HStack>\n    </Box>\n  ) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));\n"]},"metadata":{},"sourceType":"script"}