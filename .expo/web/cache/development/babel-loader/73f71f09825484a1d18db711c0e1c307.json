{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _Stack = require(\"../Stack\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Button/ButtonGroup.tsx\";\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(function (_ref, ref) {\n  var children = _ref.children,\n      divider = _ref.divider,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"divider\"]);\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('ButtonGroup', props),\n      space = _usePropsResolution.space,\n      direction = _usePropsResolution.direction,\n      variant = _usePropsResolution.variant,\n      size = _usePropsResolution.size,\n      colorScheme = _usePropsResolution.colorScheme,\n      isDisabled = _usePropsResolution.isDisabled,\n      isAttached = _usePropsResolution.isAttached,\n      newProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"space\", \"direction\", \"variant\", \"size\", \"colorScheme\", \"isDisabled\", \"isAttached\"]);\n\n  var _usePropsResolution2 = (0, _useThemeProps.usePropsResolution)('Button', props),\n      borderRadius = _usePropsResolution2.borderRadius;\n\n  var computedChildren;\n\n  if (Array.isArray(children)) {\n    computedChildren = _react.default.Children.map(children, function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        key: \"button-group-child-\" + index,\n        variant: variant,\n        size: size,\n        colorScheme: colorScheme,\n        isDisabled: isDisabled\n      }, isAttached ? {\n        borderRadius: 0\n      } : {}, isAttached && index === 0 ? direction === 'column' ? {\n        borderTopRadius: borderRadius\n      } : {\n        borderLeftRadius: borderRadius\n      } : {}, isAttached && index === (children == null ? void 0 : children.length) - 1 ? direction === 'column' ? {\n        borderBottomRadius: borderRadius\n      } : {\n        borderRightRadius: borderRadius\n      } : {}, isAttached && index !== 0 ? direction === 'column' ? {\n        borderTopWidth: 0\n      } : {\n        borderLeftWidth: 0\n      } : {}, child.props));\n    });\n  } else {\n    computedChildren = _react.default.Children.map(children, function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        key: \"button-group-child-\" + index,\n        variant: variant,\n        size: size,\n        colorScheme: colorScheme,\n        isDisabled: isDisabled\n      }, child.props));\n    });\n  }\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react.default.createElement(_Stack.Stack, (0, _extends2.default)({\n    divider: divider,\n    space: isAttached ? 0 : space,\n    direction: direction\n  }, newProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), computedChildren);\n}));\n\nexports.default = _default;","map":{"version":3,"sources":["ButtonGroup.tsx"],"names":["children","divider","props","space","direction","variant","size","colorScheme","isDisabled","isAttached","newProps","borderRadius","Array","computedChildren","React","key","index","borderTopRadius","borderLeftRadius","borderBottomRadius","borderRightRadius","borderTopWidth","borderLeftWidth","child"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IButtonGroupProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Stack } from '../Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport default memo(\n  forwardRef(\n    ({ children, divider, ...props }: IButtonGroupProps, ref?: any) => {\n      const {\n        space,\n        direction,\n        variant,\n        size,\n        colorScheme,\n        isDisabled,\n        isAttached,\n        ...newProps\n      } = usePropsResolution('ButtonGroup', props);\n\n      const { borderRadius } = usePropsResolution('Button', props);\n      let computedChildren: JSX.Element | JSX.Element[];\n\n      if (Array.isArray(children)) {\n        computedChildren = React.Children.map(\n          children,\n          (child: JSX.Element, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n\n              // when buttons are attached, remove rounded corners of all buttons except extreme buttons\n              ...(isAttached ? { borderRadius: 0 } : {}),\n              ...(isAttached && index === 0\n                ? direction === 'column'\n                  ? { borderTopRadius: borderRadius }\n                  : { borderLeftRadius: borderRadius }\n                : {}),\n              ...(isAttached && index === children?.length - 1\n                ? direction === 'column'\n                  ? { borderBottomRadius: borderRadius }\n                  : { borderRightRadius: borderRadius }\n                : {}),\n\n              //when buttons are attached, remove double border from them, just keep borderRight in case for direction row and borderBottom in case of direction column for every component\n              ...(isAttached && index !== 0\n                ? direction === 'column'\n                  ? { borderTopWidth: 0 }\n                  : { borderLeftWidth: 0 }\n                : {}),\n              ...child.props,\n            });\n          }\n        );\n      } else {\n        computedChildren = React.Children.map(\n          children,\n          (child: JSX.Element, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n              ...child.props,\n            });\n          }\n        );\n      }\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n      return (\n        <Stack\n          divider={divider}\n          space={isAttached ? 0 : space}\n          direction={direction}\n          {...newProps}\n          ref={ref}\n        >\n          {computedChildren}\n        </Stack>\n      );\n    }\n  )\n);\n"]},"metadata":{},"sourceType":"script"}