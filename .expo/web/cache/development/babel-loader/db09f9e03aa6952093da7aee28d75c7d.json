{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.useIsPressed = exports.useFocus = exports.useHover = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nvar _styled = require(\"../../../utils/styled\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _focus = require(\"@react-native-aria/focus\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Pressable/Pressable.tsx\";\n\nvar useHover = function useHover() {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isHovered = _React$useState2[0],\n      setHovered = _React$useState2[1];\n\n  return {\n    hoverProps: {\n      onHoverIn: function onHoverIn() {\n        return setHovered(true);\n      },\n      onHoverOut: function onHoverOut() {\n        return setHovered(false);\n      }\n    },\n    isHovered: isHovered\n  };\n};\n\nexports.useHover = useHover;\n\nvar useFocus = function useFocus() {\n  var _React$useState3 = _react.default.useState(false),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      isFocused = _React$useState4[0],\n      setFocused = _React$useState4[1];\n\n  return {\n    focusProps: {\n      onFocus: function onFocus() {\n        return setFocused(true);\n      },\n      onBlur: function onBlur() {\n        return setFocused(false);\n      }\n    },\n    isFocused: isFocused\n  };\n};\n\nexports.useFocus = useFocus;\n\nvar useIsPressed = function useIsPressed() {\n  var _React$useState5 = _react.default.useState(false),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      isPressed = _React$useState6[0],\n      setIsPressed = _React$useState6[1];\n\n  return {\n    pressableProps: {\n      onPressIn: function onPressIn() {\n        return setIsPressed(true);\n      },\n      onPressOut: function onPressOut() {\n        return setIsPressed(false);\n      }\n    },\n    isPressed: isPressed\n  };\n};\n\nexports.useIsPressed = useIsPressed;\nvar StyledPressable = (0, _styled.makeStyledComponent)(_reactNative.Pressable);\n\nvar Pressable = function Pressable(_ref, ref) {\n  var children = _ref.children,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n\n  var _useHover = useHover(),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _useIsPressed = useIsPressed(),\n      pressableProps = _useIsPressed.pressableProps,\n      isPressed = _useIsPressed.isPressed;\n\n  var _useFocus = useFocus(),\n      focusProps = _useFocus.focusProps,\n      isFocused = _useFocus.isFocused;\n\n  var _useFocusRing = (0, _focus.useFocusRing)(),\n      isFocusVisible = _useFocusRing.isFocusVisible,\n      focusRingProps = _useFocusRing.focusProps;\n\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Pressable', props, {\n    isPressed: isPressed,\n    isFocused: isFocused,\n    isHovered: isHovered,\n    isFocusVisible: isFocusVisible\n  }),\n      onPressIn = _usePropsResolution.onPressIn,\n      onPressOut = _usePropsResolution.onPressOut,\n      onHoverIn = _usePropsResolution.onHoverIn,\n      onHoverOut = _usePropsResolution.onHoverOut,\n      onFocus = _usePropsResolution.onFocus,\n      onBlur = _usePropsResolution.onBlur,\n      resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\"]);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react.default.createElement(StyledPressable, (0, _extends2.default)({\n    ref: ref,\n    onPressIn: (0, _utils.composeEventHandlers)(onPressIn, pressableProps.onPressIn),\n    onPressOut: (0, _utils.composeEventHandlers)(onPressOut, pressableProps.onPressOut),\n    onHoverIn: (0, _utils.composeEventHandlers)(onHoverIn, hoverProps.onHoverIn),\n    onHoverOut: (0, _utils.composeEventHandlers)(onHoverOut, hoverProps.onHoverOut),\n    onFocus: (0, _utils.composeEventHandlers)((0, _utils.composeEventHandlers)(onFocus, focusProps.onFocus), focusRingProps.onFocus),\n    onBlur: (0, _utils.composeEventHandlers)((0, _utils.composeEventHandlers)(onBlur, focusProps.onBlur), focusRingProps.onBlur)\n  }, resolvedProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), typeof children !== 'function' ? children : children({\n    isPressed: isPressed,\n    isHovered: isHovered,\n    isFocused: isFocused\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Pressable));\n\nexports.default = _default;","map":{"version":3,"sources":["Pressable.tsx"],"names":["useHover","isHovered","setHovered","React","hoverProps","onHoverIn","onHoverOut","useFocus","isFocused","setFocused","focusProps","onFocus","onBlur","useIsPressed","isPressed","setIsPressed","pressableProps","onPressIn","onPressOut","StyledPressable","RNPressable","Pressable","children","props","isFocusVisible","focusRingProps","resolvedProps"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IPressableProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false),\n    },\n    isHovered,\n  };\n};\n\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false),\n    },\n    isPressed,\n  };\n};\n\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = ({ children, ...props }: IPressableProps, ref: any) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, {\n    isPressed,\n    isFocused,\n    isHovered,\n    isFocusVisible,\n  });\n\n  // TODO: Replace Render props with Context Hook\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // TODO : Replace Render props with Context Hook\n  return (\n    <StyledPressable\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {typeof children !== 'function'\n        ? children\n        : children({\n            isPressed,\n            isHovered,\n            isFocused,\n          })}\n    </StyledPressable>\n  );\n};\n\nexport default memo(forwardRef(Pressable));\n"]},"metadata":{},"sourceType":"script"}