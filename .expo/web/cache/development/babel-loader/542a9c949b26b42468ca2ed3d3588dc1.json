{"ast":null,"code":"import { InMemoryCache, makeVar } from '@apollo/client';\nimport { offsetLimitPagination } from '@apollo/client/utilities';\nexport var pokemonFilterVar = makeVar({\n  type: '',\n  sortDescending: false\n});\nexport var cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        pokemonFilter: {\n          read: function read() {\n            return pokemonFilterVar();\n          }\n        },\n        pokemons: offsetLimitPagination(['name'])\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/henrikvl/Documents/NTNU/WebDev/project4/cache.ts"],"names":["InMemoryCache","makeVar","offsetLimitPagination","pokemonFilterVar","type","sortDescending","cache","typePolicies","Query","fields","pokemonFilter","read","pokemons"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,gBAAvC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AASA,OAAO,IAAMC,gBAAgB,GAAGF,OAAO,CAAgB;AACrDG,EAAAA,IAAI,EAAE,EAD+C;AAErDC,EAAAA,cAAc,EAAE;AAFqC,CAAhB,CAAhC;AAKP,OAAO,IAAMC,KAAoB,GAAG,IAAIN,aAAJ,CAAkB;AACpDO,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,EAAE;AACbC,UAAAA,IADa,kBACN;AACL,mBAAOR,gBAAgB,EAAvB;AACD;AAHY,SADT;AAQNS,QAAAA,QAAQ,EAAEV,qBAAqB,CAAC,CAAC,MAAD,CAAD;AARzB;AADH;AADK;AADsC,CAAlB,CAA7B","sourcesContent":["import { InMemoryCache, makeVar } from '@apollo/client';\nimport { offsetLimitPagination } from '@apollo/client/utilities';\nimport PokemonFilter from './types/pokemonFilter';\n\n/**\n * Handles the filter variables.\n *\n * It allows for saving and retrieval of filter states in the cache.\n * Here we set the initial values for the filter.\n */\nexport const pokemonFilterVar = makeVar<PokemonFilter>({\n  type: '',\n  sortDescending: false,\n});\n\nexport const cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        pokemonFilter: {\n          read() {\n            return pokemonFilterVar();\n          },\n        },\n        // This defines a merge function for paginated results. See https://www.apollographql.com/docs/react/pagination/offset-based/#setting-keyargs-with-offsetlimitpagination\n        // Merge depends on offset and limit by default. Parameters are other dependencies.\n        pokemons: offsetLimitPagination(['name']),\n      },\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}